console.log('Bot has been started');
const { VK } = require('vk-io');
const vk = new VK();
const commands = [];
const request = require('prequest');
let user = new VK();
const requests = require('request');
const fs = require("fs");
const rq = require("prequest");
const donate_key = '339f0a91edb2785e2ba72244a4941734d25e539f2d6e679bfb830253d5c02e29ad77e6e6dcca71c4465b0';
const bot_owner = 542439242;
let giving = false;
var wall_to_send = '';

const cars = [
	{
		name: 'Lada Granta',
		cost: 350000,
		id: 1
	},
	{
		name: 'Hyundai Solaris',
		cost: 525000,
		id: 2
	},
	{
		name: 'Kia Rio',
		cost: 750000,
		id: 3
	},
	{
		name: 'Skoda Octavia',
		cost: 1000000,
		id: 4
	},
	{
		name: 'Kia Optima',
		cost: 1900000,
		id: 5
	},
	{
		name: 'Lexus RX350',
		cost: 2750000,
		id: 6
	},
	{
		name: 'Tayota Land Cruiser',
		cost: 3000000,
		id: 7
	},
	{
		name: 'Mercedes-Benz A-Class',
		cost: 5000000,
		id: 8
	},
	{
		name: 'BMW 8-Series',
		cost: 10000000,
		id: 9
	},
	{
		name: 'Land Rover Range Rover',
		cost: 17500000,
		id: 10
	},
	{
		name: 'Lamborghini Huracan',
		cost: 25000000,
		id: 11
	},
	{
		name: 'Ferrari 812 Superfast',
		cost: 30000000,
		id: 12
	},
	{
		name: 'Porsche 911',
		cost: 50000000,
		id: 13
	},
	{
		name: 'Mercedes-Benz S-Class',
		cost: 75000000,
		id: 14
	},
	{
		name: 'Lamborghini Aventador',
		cost: 100000000,
		id: 15
	}
];

const yachts = [
	{
		name: 'Princess 60',
		cost: 1500000,
		id: 1
	},
	{
		name: 'Wider 165',
		cost: 5000000,
		id: 2
	},
	{
		name: 'Eclipse',
		cost: 10000000,
		id: 3
	},
	{
		name: 'Dubai',
		cost: 17500000,
		id: 4
	},
	{
		name: 'Streets of Monaco',
		cost: 30000000,
		id: 5
	}
];

const airplanes = [
	{
		name: '–ü–∞—Ä–∞–ø–ª–∞–Ω',
		cost: 900000,
		id: 1
	},
	{
		name: 'F-35A',
		cost: 10000000,
		id: 2
	},
	{
		name: 'Boeing 747-430 Custom',
		cost: 25000000,
		id: 3
	},
	{
		name: 'F-22 Raptor',
		cost: 100000000,
		id: 4
	}
];

const helicopters = [
	{
		name: 'Robinson R44',
		cost: 3000000,
		id: 1
	},
	{
		name: 'Leonardo AW109 Power',
		cost: 7500000,
		id: 2
	},
	{
		name: 'Bell 429WLG',
		cost: 16000000,
		id: 3
	},
	{
		name: 'Bell V-22 Osprey',
		cost: 32575000,
		id: 4
	}
];

const homes = [
	{
		name: '–ü–æ–¥–≤–∞–ª',
		cost: 150000,
		id: 1
	},
	{
		name: '–î–æ–º–∏–∫ –Ω–∞ –¥–µ—Ä–µ–≤–µ',
		cost: 800000,
		id: 2
	},
	{
		name: '–î–æ–º –≤ –ª–µ—Å—É',
		cost: 2000000,
		id: 3
	},
	{
		name: '–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –¥–æ–º',
		cost: 7500000,
		id: 4
	},
	{
		name: '–î–∞—á–∞',
		cost: 30000000,
		id: 5
	},
	{
		name: '–î–≤—É—Ö—ç—Ç–∞–∂–Ω–∞—è –¥–∞—á–∞',
		cost: 80000000,
		id: 6
	},
	{
		name: '–û—Å–æ–±–Ω—è–∫',
		cost: 187500000,
		id: 7
	},
	{
		name: '–î–æ–º –Ω–∞ –ø–ª—è–∂–µ',
		cost: 500000000,
		id: 8
	}
];

const apartments = [
	{
		name: '–ß–µ—Ä–¥–∞–∫',
		cost: 25000,
		id: 1
	},
	{
		name: '–û–¥–Ω–æ–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞',
		cost: 300000,
		id: 2
	},
	{
		name: '–î–≤—É—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞',
		cost: 1000000,
		id: 3
	},
	{
		name: '–ß–µ—Ç—ã—Ä–µ—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞',
		cost: 5000000,
		id: 4
	},
	{
		name: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å –ï–≤—Ä–æ—Ä–µ–º–æ–Ω—Ç–æ–º',
		cost: 10000000,
		id: 5
	}
];

const phones = [
	{
		name: 'Turbo X Mercury',
		cost: 4500,
		id: 1
	},
	{
		name: 'Honor 8A',
		cost: 7500,
		id: 2
	},
	{
		name: 'Xiamo Redmi 8',
		cost: 9000,
		id: 3
	},
	{
		name: 'Galaxy A40',
		cost: 15000,
		id: 4
	},
	{
		name: 'Xiami Mi 9T',
		cost: 19000,
		id: 5
	},
	{
		name: 'Mi Note 10',
		cost: 28000,
		id: 6
	},
	{
		name: 'iPhone 11',
		cost: 50000,
		id: 7
	}

];

const stranas = [

	{
		name: '-',
		cost: 0,
		id: 1
    },
	{
		name: '–°–®–ê',
		cost: 0,
		id: 2
    },

	{
		name: '–†–æ—Å—Å–∏—è',
		cost: 0,
		id: 3
    },

	{
		name: '–£–∫—Ä–∞–∏–Ω–∞',
		cost: 0,
		id: 4
    }
];

const shlapas = [

	{
		name: 'üëí–ü–∞–Ω–∞–º–∞',
		cost: 650,
		id: 1
    },
	{
		name: 'üé©–¶–∏–ª–∏–Ω–¥—Ä',
		cost: 3000,
		id: 2
    },
	{
		name: 'üéì–®–∫–æ–ª–∞',
		cost: 5000,
		id: 3
    },
	{
		name: '‚õë–ö–∞—Å–∫–∞',
		cost: 75000,
		id: 4
    },
	{
		name: 'üëë–ö–æ—Ä–æ–Ω–∞',
		cost: 15000,
		id: 5
    }
];

const obyvs = [
	{
		name: 'üëû–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –æ–±—É–≤—å',
		cost: 500,
		id: 1
    },
	{
		name: 'üëü–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∫—Ä–æ—Å—Å—ã',
		cost: 2500,
		id: 2
    }
];


const rubahkas = [
	{
		name: 'üëî–û–¥–µ—Ç –≤ Leviton',
		cost: 75000,
		id: 1
    },
	{
		name: 'üëï–û–¥–µ—Ç –≤ Gucci',
		cost: 12500,
		id: 2
    }
];

const golovas = [
	{
		name: 'üòé–ö—Ä—É—Ç–æ–π',
		cost: 0,
		id: 1
    },
	{
		name: 'üò°–ó–ª–æ–π',
		cost: 10,
		id: 2
    },
	{
		name: 'üëΩ–ò–Ω–æ–ø—Ä–∏—à–µ–Ω–µ–ª–µ—Ü',
		cost: 20,
		id: 3
    },
	{
		name: 'üòá–ê–Ω–≥–µ–ª',
		cost: 30,
		id: 4
    },
	{
		name: '‚òπ–ì—Ä—É—Å—Ç–Ω—ã–π',
		cost: 40,
		id: 5
    },
	{
		name: '‚òπ–î–µ–º–æ–Ω',
		cost: 50,
		id: 6
    },
	{
		name: 'üëÆ–ó–∞–∫–æ–Ω–Ω–∏–∫',
		cost: 60,
		id: 7
    },
	{
		name: 'ü§ì–ë–∞—Ç–∞–Ω–∏–∫',
		cost: 70,
		id: 8
    },
	{
		name: 'ü§†–ö–æ–≤–±–æ–π',
		cost: 80,
		id: 9
    },
	{
		name: 'üòà–î—å—è–≤–æ–ª',
		cost: 100,
		id: 10
    },
	{
		name: 'üëªMarshmello',
		cost: 100000,
		id: 11
    }
];

const cams = [
	{
		name: 'Rekam DVC-540',
		cost: 6300,
		id: 1
    },
	{
		name: 'Panasonic HC-V770',
		cost: 24500,
		id: 2
    },
    {
		name: 'Sony FDR-AX700',
		cost: 81000,
		id: 3
    },
	{
		name: 'Insta360 Titan',
		cost: 1250000,
		id: 4
    }
];

const pitoms = [
	{
		name: '–ñ—É–∫',
		cost: 5000,
		id: 1
    },
	{
		name: '–ü–∞—É–∫',
		cost: 10000,
		id: 2
    },
		{
		name: '–ü—á–µ–ª–∞',
		cost: 15000,
		id: 3
    },
	{
		name: '–ë–∞–±–æ—á–∫–∞',
		cost: 25000,
		id: 4
    },
	{
		name: '–£–ª–∏—Ç–∫–∞',
		cost: 30000,
		id: 5
    },
	{
		name: '–Ø—â–µ—Ä–∏—Ü–∞',
		cost: 50000,
		id: 6
    },
    {
    	name: '–ß–µ—Ä–µ–ø–∞—Ö–∞',
    	cost: 100000,
    	id: 7
    },
    {
    	name: '–ü–æ–ø—É–≥–∞–π',
    	cost: 200000,
    	id: 8
    },
    {
    	name: '–ö—Ä–∞–±',
    	cost: 300000,
    	id: 9
    },
    {
    	name: '–ö–∞–ª—å–º–∞—Ä',
    	cost: 350000,
    	id: 10
    },
   	{
    	name: '–î–µ–ª—å—Ñ–∏–Ω',
    	cost: 1000000,
    	id: 11
    },
    {
    	name: '–¶—ã–ø–∞',
    	cost: 5000,
    	id: 12
    },
    {
    	name: '–£—Ç–∫–∞',
    	cost: 25000,
    	id: 13
    },
    {
    	name: '–û—Ä–µ–ª',
    	cost: 50000,
    	id: 14
    },
    {
    	name: '–ö—É—Ä–∏—Ü–∞',
    	cost: 175000,
    	id: 15
    },
    {
    	name: '–ë–µ–ª–∫–∞',
    	cost: 25000,
    	id: 16
    },
    {
    	name: '–•–æ–º—è–∫',
    	cost: 100000,
    	id: 17
    },
    {
    	name: '–ó–∞—è—Ü',
    	cost: 300000,
    	id: 18
    },
    {
    	name: '–ö–æ—à–∫–∞',
    	cost: 750000,
    	id: 19
    },
    {
    	name: '–°–æ–±–∞–∫–∞',
    	cost: 1000000,
    	id: 20
    },
    {
    	name: '–ö—É–∞–ª–∞',
    	cost: 325000,
    	id: 21
    },
    {
    	name: '–ú–∏—à–∞',
    	cost: 800000,
    	id: 22
    },
    {
    	name: '–¢–∏–≥—Ä',
    	cost: 1750000,
    	id: 23
    },
    {
    	name: '–õ–µ–≤',
    	cost: 3500000,
    	id: 24
    },
    {
    	name: '–ü–∞–Ω–¥–∞',
    	cost: 10000000,
    	id: 25
    }
];

const woods = [
	{
		name: '–û–¥—É–≤–∞–Ω—á–∏–∫',
		cost: 3000,
		id: 1
    },
	{
		name: '–†–æ–∑–∞',
		cost: 6000,
		id: 2
    },
	{
		name: '–ü–∞–ª—å–º–∞',
		cost: 10000,
		id: 3
    }
];

const teliks = [
	{
		name: 'Samsung',
		cost: 3000,
		id: 1
    },
	{
		name: 'Haier',
		cost: 5000,
		id: 2
    },
	{
		name: 'LG 43LK',
		cost: 8000,
		id: 3
    },	
	{
		name: 'Artel 32',
		cost: 12000,
		id: 4
    },
	{
		name: 'Sony KDL-40',
		cost: 20000,
		id: 5
    },
	{
		name: 'Elenberg',
		cost: 30000,
		id: 6
    },
	{
		name: 'Toshiba 32',
		cost: 45000,
		id: 7
    },	
	{
		name: 'Philips',
		cost: 60000,
		id: 8
    },
	{
		name: 'ERGO LE43',
		cost: 75000,
		id: 9
    }
];

const copters = [

	{
		name: 'Hubsan X4',
		cost: 300000,
		id: 1
	},
	{
		name: 'Sima X5C',
		cost: 350000,
		id: 2
	},
	{
		name: 'DJI phantom',
		cost: 400000,
		id: 3
	},
	{
		name: 'FPV mt2204',
		cost: 500000,
		id: 4
	}

];

const tables = [
	{
		name: 'Digma Plane 7594',
		cost: 3500,
		id: 1
	},
	{
		name: 'Huawei Mediapad T3',
		cost: 10000,
		id: 2
	},
	{
		name: 'Samsung Galaxy Tab',
		cost: 25000,
		id: 3
	},
	{
		name: 'Apple iPad Pro',
		cost: 50000,
		id: 4
	},
	{
		name: 'Microsoft Surface',
		cost: 75000,
		id: 5
	}
];

const motos = [
	{
		name: 'Faggio',
		cost: 100000,
		id: 1
	},
	{
		name: 'Freeway',
		cost: 250000,
		id: 2
	},
	{
		name: 'PCJ-500',
		cost: 500000,
		id: 3
	},
	{
		name: 'BF-400',
		cost: 750000,
		id: 4
	},
	{
		name: 'NRG-500',
		cost: 1500000,
		id: 5
	}
];

const farms = [
	{
		name: 'Antminer T17',
		cost: 150000,
		id: 1
	},
	{
		name: '–§–µ—Ä–º–∞ –¥–ª—è –º–∞–π–Ω–∏–Ω–≥–∞',
		cost: 500000,
		id: 2
	},
	{
		name: '–û—Ñ–∏—Å –¥–ª—è –º–∞–π–Ω–∏–Ω–≥–∞',
		cost: 3000000,
		id: 3
	}
];

const businesses = [
	[ // –ë–∏–∑–Ω–µ—Å #1
		{ // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –±–∏–∑–Ω–µ—Å
			name: '–ó–∞–±–µ–≥–∞–ª–æ–≤–∫–∞',
			cost: 100000,
			earn: 300,
			workers: 1,
			id: 1,
			icon: 'üçñ'
		},

		{ // –ü–µ—Ä–≤–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ
			name: '–î–≤–µ –∑–∞–±–µ–≥–∞–ª–æ–≤–∫–∏',
			cost: 500000,
			earn: 900,
			workers: 5,
			id: 1,
			icon: 'üå≠'
		},

		{ // –í—Ç–æ—Ä–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ
			name: '–¢—Ä–∏ –∑–∞–±–µ–≥–∞–ª–æ–≤–∫–∏',
			cost: 1000000,
			earn: 1800,
			workers: 10,
			id: 1,
			icon: 'ü•ê'
		},

		{ // 3 —É–ª—É—á—à–µ–Ω–∏–µ
			name: '–ß–µ—Ç—ã—Ä–µ –∑–∞–±–µ–≥–∞–ª–æ–≤–∫–∏',
			cost: 2500000,
			earn: 3600,
			workers: 15,
			id: 1,
			icon: 'üçî'
		},

		{ // –ü–æ—Å–ª–µ–¥–Ω–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ
			name: '–ö–æ–º–ø–∞–Ω–∏—è –∑–∞–±–µ–≥–∞–ª–æ–≤–æ–∫',
			cost: 5000000,
			earn: 7200,
			workers: 20,
			id: 1,
			icon: 'üçß'
		}
	],

	[
		{
			name: '–ü—è—Ç—ë—Ä–æ—á–∫–∞',
			cost: 300000,
			earn: 600,
			workers: 1,
			id: 2,
			icon: 'üè™'
		},

		{
			name: '–î–≤–µ –ø—è—Ç—ë—Ä–æ—á–∫–∏',
			cost: 1000000,
			earn: 1200,
			workers: 5,
			id: 2,
			icon: 'üè™'
		},

		{
			name: '–¢—Ä–∏ –ø—è—Ç—ë—Ä–æ—á–∫–∏',
			cost: 3000000,
			earn: 2400,
			workers: 10,
			id: 2,
			icon: 'üè™'
		},

		{
			name: '–°–µ—Ç—å –ø—è—Ç—ë—Ä–æ—á–µ–∫',
			cost: 7500000,
			earn: 5000,
			workers: 15,
			id: 2,
			icon: 'üè™'
		},

		{
			name: '–ö–æ–º–ø–∞–Ω–∏—è –ø—è—Ç–µ—Ä–æ—á–µ–∫',
			cost: 15250000,
			earn: 10000,
			workers: 20,
			id: 2,
			icon: 'üè™'
		}
	],

	[
		{
			name: '–°—Ç–æ–ª–æ–≤–∞—è',
			cost: 750000,
			earn: 900,
			workers: 2,
			id: 3,
			icon: 'üç¥'
		},

		{
			name: '–ö–∞—Ñ–µ',
			cost: 2500000,
			earn: 1800,
			workers: 5,
			id: 3,
			icon: '‚òï'
		},

		{
			name: '–ü–∏—Ü—Ü–µ—Ä–∏—è',
			cost: 5000000,
			earn: 3600,
			workers: 10,
			id: 3,
			icon: 'üçï'
		},

		{
			name: '–ë–∞—Ä',
			cost: 15000000,
			earn: 7200,
			workers: 15,
			id: 3,
			icon: 'üç∞'
		},

		{
			name: '–†–µ—Å—Ç–æ—Ä–∞–Ω',
			cost: 30000000,
			earn: 12400,
			workers: 20,
			id: 3,
			icon: 'üçπ'
		}
	],

	[
		{
			name: '–ó–∞–≤–æ–¥',
			cost: 5000000,
			earn: 2880,
			workers: 2,
			id: 5,
			icon: 'üè≠'
		},

		{
			name: '–°—Ç—Ä–æ–π–∫–∞',
			cost: 10000000,
			earn: 5600,
			workers: 7,
			id: 5,
			icon: 'üèó'
		},

		{
			name: '–†–µ–º–æ–Ω—Ç',
			cost: 18000000,
			earn: 11200,
			workers: 15,
			id: 5,
			icon: 'üèò'
		},

		{
			name: '–ö—É—Ä–æ—Ä—Ç',
			cost: 54000000,
			earn: 22400,
			workers: 20,
			id: 5,
			icon: 'üèù'
		}
	],

	[
		{
			name: '–ú–∞–ª–µ–Ω—å–∫–∏–π –æ—Ñ–∏—Å',
			cost: 27000000,
			earn: 11200,
			workers: 2,
			id: 7,
			icon: 'üè¢'
		},

		{
			name: '–ë–æ–ª—å—à–æ–π –æ—Ñ–∏—Å',
			cost: 81000000,
			earn: 22400,
			workers: 5,
			id: 7,
			icon: 'üè¶'
		},

		{
			name: '–ù–µ–±–æ—Å–∫—Ä—ë–±',
			cost: 162000000,
			earn: 44800,
			workers: 10,
			id: 7,
			icon: 'üè¢'
		},
	],

	[
		{
			name: '–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä',
			cost: 126000000,
			earn: 22400,
			workers: 1,
			id: 11,
			icon: 'üï∂'
		},

		{
			name: '–ö–∏–Ω–æ—Å—Ç—É–¥–∏—è',
			cost: 243000000,
			earn: 67200,
			workers: 12,
			id: 11,
			icon: 'üé¨'
		}
	]
];

const works = [
	{
		name: '–î–≤–æ—Ä–Ω–∏–∫',
		requiredLevel: 1,
		min: 400,
		max: 750,
		id: 1
	},
	{
		name: '–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫',
		requiredLevel: 3,
		min: 750,
		max: 1500,
		id: 2
	},
	{
		name: '–≠–ª–µ–∫—Ç—Ä–∏–∫',
		requiredLevel: 5,
		min: 1500,
		max: 3000,
		id: 3
	},
	{
		name: '–°–ª–µ—Å–∞—Ä—å',
		requiredLevel: 8,
		min: 3000,
		max: 5000,
		id: 4
	},
	{
		name: '–Æ—Ä–∏—Å—Ç',
		requiredLevel: 10,
		min: 5000,
		max: 6000,
		id: 5
	},
	{
		name: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä',
		requiredLevel: 14,
		min: 6000,
		max: 9000,
		id: 6
	},
	{
		name: '–ë–∞—Ä–º–µ–Ω',
		requiredLevel: 22,
		min: 10000,
		max: 20000,
		id: 7
	},
	{
		name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
		requiredLevel: 25,
		min: 22500,
		max: 37500,
		id: 8
	},
	{
		name: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç',
		requiredLevel: 49,
		min: 50000,
		max: 100000,
		id: 9
	}
];

const utils = {
	sp: (int) => {
		int = int.toString();
		return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join('');
	},
	rn: (int, fixed) => {
		if (int === null) return null;
		if (int === 0) return '0';
		fixed = (!fixed || fixed < 0) ? 0 : fixed;
		let b = (int).toPrecision(2).split('e'),
			k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),
			c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed),
			d = c < 0 ? c : Math.abs(c),
			e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω'][k];

			e = e.replace(/e/g, '');
			e = e.replace(/\+/g, '');
			e = e.replace(/Infinity/g, '–î–û–•–ï–†–ê');

		return e;
	},
	gi: (int) => {
		int = int.toString();

		let text = ``;
		for (let i = 0; i < int.length; i++)
		{
			text += `${int[i]}&#8419;`;
		}

		return text;
	},
	decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] },
	random: (x, y) => {
		return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
	},
	pick: (array) => {
		return array[utils.random(array.length - 1)];
	},
	time: () => {
		return parseInt(new Date().getTime()/1000)
	}
}

const rotateText = {
	q: 'q',
	w: ' ç',
	e: '«ù',
	r: '…π',
	t: ' á',
	y: ' é',
	u: 'u',
	i: '·¥â',
	o: 'o',
	p: 'p',
	a: '…ê',
	s: 's',
	d: 'd',
	f: '…ü',
	g: '∆É',
	h: '…•',
	j: '…æ',
	k: ' û',
	l: 'l',
	z: 'z',
	x: 'x',
	c: '…î',
	v: ' å',
	b: 'b',
	n: 'n',
	m: '…Ø',

	–π: '≈Ü',
	—Ü: '«π',
	—É: ' é',
	–∫: ' û',
	–µ: '«ù',
	–Ω: '–Ω',
	–≥: '…π',
	—à: 'm',
	—â: 'm',
	–∑: 'Œµ',
	—Ö: '—Ö',
	—ä: 'q',
	—Ñ: '—Ñ',
	—ã: 'ƒ±q',
	–≤: ' ö',
	–∞: '…ê',
	–ø: 'u',
	—Ä: 'd',
	–æ: '–æ',
	–ª: 'v',
	–¥: '…ì',
	–∂: '–∂',
	—ç: '—î',
	—è: ' Å',
	—á: '“ª',
	—Å: '…î',
	–º: 'w',
	–∏: '–∏',
	—Ç: '…Ø',
	—å: 'q',
	–±: '∆ç',
	—é: 'oƒ±'
}

let btc = 6000;

let users = require('./users.json');
let buttons = [];

setTimeout(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 5);

setInterval(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 60000);

setInterval(async () => {
	await saveUsers();
	console.log('saved');
}, 30000);

setInterval(async () => {
	users.filter(x=> x.misc.farm !== 0).map(x=> {
		if(x.misc.farm === 1)
		{
			x.farm_btc += 1;
		}

		if(x.misc.farm === 2)
		{
			x.farm_btc += 3;
		}

		if(x.misc.farm === 3)
		{
			x.farm_btc += 5;
		}
	});
}, 3600000);

setInterval(async () => {
	users.map(user => {
		for(var i = 0; i < user.business.length; i++)
		{
			const biz = businesses[user.business[i].id - 1][user.business[i].upgrade - 1];
			user.business[i].moneys += Math.floor(biz.earn / biz.workers * user.business[i].workers)
		}
	});
}, 3600000);

function clearTemp()
{
	users.map(user => {
		user.timers.hasWorked = false;
		user.timers.bonus = false;
	});
}

clearTemp();

async function saveUsers()
{
	require('fs').writeFileSync('./users.json', JSON.stringify(users, null, '\t'));
	return true;
}

vk.setOptions({ token: '339f0a91edb2785e2ba72244a4941734d25e539f2d6e679bfb830253d5c02e29ad77e6e6dcca71c4465b0', pollingGroupId: 185115712   });
const { updates, snippets } = vk;

updates.startPolling();
updates.on('message', async (message) => {
	if(Number(message.senderId) <= 0) return;
	if(/\[club185115712\|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[club185115712\|(.*)\]/ig, '').trim();

	if(!users.find(x=> x.id === message.senderId))
	{
		const [user_info] = await vk.api.users.get({ user_id: message.senderId });
		const date = new Date();

		users.push({
			id: message.senderId,
			uid: users.length,
			balance: 1000,
			bank: 0,
			admin: false,
			btc: 0,
			farm_btc: 0,
			biz: 0,
			btc: 0,
			golod: 0,
			ryuda: 0,
			ryda: 0,
			legend: 0,
			ryda: 0,
			bonia: 1,
			biz: 0,
			rating: 0,
			regDate: `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`,
			mention: true,
			ban: false,
			timers: {
				hasWorked: false,
				bonus: false,
				pet: false,
				promo: false,
				taxi: false,
				safe: false,
				film: false,
				vzlom: false,
				isl: false,
				edae: false
			},
			tag: user_info.first_name,
			work: 0,
			business: [],
			notifications: true,
			exp: 1,
			level: 1,
			referal: null,
			transport: {
				zapret: 0,
				zapret2: 0,
				car: 0,
				promocod: 0,
				moto: 0,
				wood: 0,
				shlapa: 0,
				pas: 0,
				shtani: 1,
				obyv: 1,
				rubahka: 1,
				golova: 1,
				cam: 0,
				passp: 0,
				strana: 1,
				pitom: 1,
				telik: 0,
				copter: 0,
				table: 0,
				yacht: 0,
				airplane: 0,
				helicopter: 0
			},
			realty: {
				home: 0,
				apartment: 0
			},
			misc: {
				phone: 0,
				farm: 0,
				farm_count: 0
			},
			marriage: {
				partner: 0,
				requests: []
			},
			limit: {
				timer: utils.time(),
				sent: 0
			}
		});
		message.send(`–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, –æ–≥–æ–Ω—ë–∫. –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!üÜï\n\nüåà–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –∫–≤–µ—Å—Ç–∞–º–∏ –∫–æ–º–∞–Ω–¥–æ–π <<–ó–∞–¥–∞–Ω–∏—è>>, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ –∫ —á–µ–º—É –∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç.üî•\n‚ùì–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ <<–ü–æ–º–æ—â—å>>, –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥!`)
		message.sendSticker(`16785`);
	}

	message.user = users.find(x=> x.id === message.senderId);
	if(message.user.ban) return;

	const bot = (text, params) => {
		return message.send(`${message.user.mention ? `@id${message.user.id} (${message.user.tag})` : `${message.user.tag}`}, ${text}`, params);
	}

	const command = commands.find(x=> x[0].test(message.text));
	if(!command) return;

	if(message.user.exp >= 24)
	{
		message.user.exp = 1;
		message.user.level += 1;
	}

	message.args = message.text.match(command[0]);
	await command[1](message, bot);

	console.log(`Executed: ${message.text}`)
});

const cmd = {
	hear: (p, f) => {
		commands.push([p, f]);
	}
}

cmd.hear(/^(?:eval)\s([^]+)$/i, async (message, bot) => {
	if(message.senderId !== 542439242| message.senderId !== 542439242) return;

	try {
		const result = eval(message.args[1]);

		if(typeof(result) === 'string')
		{
			return bot(`string: ${result}`);
		} else if(typeof(result) === '–ì–æ—Ç–æ–≤–æ')
		{
			return bot(`number: ${result}`);
		} else {
			return bot(`${typeof(result)}: ${JSON.stringify(result, null, '&#12288;\t')}`);
		}
	} catch (e) {
		console.error(e);
		return bot(`–æ—à–∏–±–∫–∞:
		${e.toString()}`);
	}
});



cmd.hear(/^(?:–ø–æ–º–æ—â—å|üìö–ü–æ–º–æ—â—å|–∫–æ–º–∞–Ω–¥—ã|–º–µ–Ω—é|help|commands|cmds|menu|–Ω–∞—á–∞—Ç—å|start)$/i, async (message, bot) => {
	await bot(`–∫–æ–º–∞–Ω–¥—ã:

üí∞‚Ä∫ –ó–∞—Ä–∞–±–æ—Ç–æ–∫: 
‚†ÄüìÉ–†–∞–±–æ—Ç—ã 
‚†Äüë∑‚Äç‚ôÇ–†–∞–±–æ—Ç–∞—Ç—å 
‚†Ä‚ùå–£–≤–æ–ª–∏—Ç—å—Å—è 

‚†Äüöï–¢–∞–∫—Å–æ–≤–∞—Ç—å 
‚†Äüë´–†–µ—Ñ–µ—Ä–∞–ª 
‚†Äüå≥–ö–æ–ø–∞—Ç—å 

‚†Äüêí–ü–∏—Ç–æ–º—Ü—ã 
‚†Ä‚†ÄüåΩ–ü–∏—Ç –ø–æ—Ö–æ–¥ 
‚†Äüé¨–°–Ω—è—Ç—å –≤–∏–¥–µ–æ 
‚†Äüîã–§–µ—Ä–º—ã 
‚†Äüí∏–ü—Ä–æ–¥–∞—Ç—å 
‚†Äüëî–ë–∏–∑–Ω–µ—Å 

üéâ‚Ä∫ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è: 
‚†Ä ‚Üï–ü–µ—Ä–µ–≤–µ—Ä–Ω–∏
‚†Ä üîÆ–ì–∞–¥–∞–ª–∫–∞
‚†Ä ‚ùì–ò–Ω—Ñ–∞
‚†Ä ‚öñ–í—ã–±–µ—Ä–∏
‚†Ä üòÜ–ê–Ω–µ–∫–¥–æ—Ç
ü•Ç‚Ä∫ –î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ:
‚†Ä üé≤–ö—É–±–∏–∫
‚†Ä üé∞–ö–∞–∑–∏–Ω–æ
‚†Ä üìà–¢—Ä–µ–π–¥
‚†Ä üì¶–°–µ–π—Ñ
‚†Ä ü•õ–°—Ç–∞–∫–∞–Ω—á–∏–∫

üñ•‚Ä∫ –û—Å–Ω–æ–≤–Ω–æ–µ:
‚†Ä üìí–ü—Ä–æ—Ñ–∏–ª—å
‚†Ä üí≤–ë–∞–ª–∞–Ω—Å
‚†Ä ‚†Ä üí≥–ë–∞–Ω–∫
‚†Ä üè°–ò–º—É—â–µ—Å—Ç–≤–æ
‚†Ä üéÅ–ë–æ–Ω—É—Å
‚†Ä üõç–ú–∞–≥–∞–∑–∏–Ω
‚†Ä üí¥–ó–∞–¥–∞–Ω–∏—è
‚†Ä üèÜ–†–µ–π—Ç–∏–Ω–≥
‚†Ä ü§ùüèª–ü–µ—Ä–µ–¥–∞—Ç—å
‚†Ä üíû–ë—Ä–∞–∫ [ID]
‚†Ä ‚†Ä üíî–†–∞–∑–≤–æ–¥
‚†Ä üëë–¢–æ–ø
‚†Ä üíé–î–æ–Ω–∞—Ç
‚†Ä üÜò–†–µ–ø–æ—Ä—Ç`, {keyboard:JSON.stringify({"one_time": false, 
 		"buttons": [
 		[
 		{
 			"action": {
 				"type": "text", 
 				"payload": "{\"button\": \"1\"}", 
 				"label": "üìÑ–ü—Ä–æ—Ñ–∏–ª—å"
 			}, 
 			"color": "primary" 
 		}, 
 		{ 
 			"action": { 
 				"type": "text", 
 				"payload": "{\"button\": \"1\"}", 
 				"label": "üìö–ü–æ–º–æ—â—å" 
 			}, 
 			"color": "primary"}, 
 			{
 				"action": { 
 					"type": "text", 
 					"payload": "{\"button\": \"1\"}", 
 					"label": "üîë–ë–æ–Ω—É—Å" 
 				}, 
 				"color": "primary"
 			}],
 		[
 			{
 				"action": { 
 					"type": "text", 
 					"payload": "{\"button\": \"1\"}", 
 					"label": "üîã–§–µ—Ä–º–∞" 
 				}, 
 				"color": "default"
 			},
 			{
 				"action": { 
 					"type": "text", 
 					"payload": "{\"button\": \"1\"}", 
 					"label": "üè¨–ë–∏–∑–Ω–µ—Å" 
 				}, 
 				"color": "default"
 			}],
 		[
 			{
 				"action": { 
 					"type": "text", 
 					"payload": "{\"button\": \"1\"}", 
 					"label": "üêØ–ü–∏—Ç–æ–º—Ü—ã" 
 				}, 
 				"color": "default"
 			}],
 			],
 		})
 })
 });

cmd.hear(/^(?:–¥–æ–Ω–∞—Ç)$/i, async (message, bot) => {
	return bot(`–¥–æ–Ω–∞—Ç –Ω–µ –∑–∞–≤–µ–∑–ª–∏.`);
});

cmd.hear(/^(?:–ø–µ—Ä–µ–≤–µ—Ä–Ω–∏)\s([^]+)$/i, async (message, bot) => {
	let text = ``;
	message.args[1].split('').map(x=> {
		if(rotateText[x])
		{
			text += rotateText[x];
		}
	});

	return bot(`: "${text.split('').reverse().join('')}"`)
});

cmd.hear(/^(?:—à–∞—Ä)\s([^]+)$/i, async (message, bot) => {
	const phrase = utils.pick(['–∫–æ–Ω–µ—á–Ω–æ', '–±–µ–∑—É—Å–ª–æ–≤–Ω–æ', '–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ', '—Å–∫–æ—Ä–µ–µ –Ω–µ—Ç, —á–µ–º –¥–∞', '–∫–æ–Ω–µ—á–Ω–æ-–∂–µ –Ω–µ—Ç', '—Å–ª–æ–∂–Ω–æ —Å–æ–≥–ª–∞—Å–∏—Ç—Å—è']);
	return bot(phrase);
});

cmd.hear(/^(?:setwall)\s(.*)$/i, async (message, bot) => {
	if(message.senderId !== 542439242| message.senderId !== 542439242) return;

	message.args[1] = message.args[1].replace("wall", "");
	message.args[1] = message.args[1].split('_');
	wall_to_send = "wall" + message.args[1][0] + "_" + message.args[1][1];
	return bot(`–ø–æ—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω`);
});

cmd.hear(/^(?:textsend)\s([^]+)/i, async (message, bot) => {
if(message.senderId !== 542439242| message.senderId !== 542439242) return;

	await bot(`—Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
	users.map(user => {
		vk.api.messages.send({ user_id: user.id, message: message.args[1], attachment: wall_to_send }).then(() => {
		});
	});

	for(var i = 1; i < 900; i++) {
		vk.api.messages.send({ peer_id: 2000000000 + i, message: message.args[1], attachment: wall_to_send }).then(() => {
		});
	}
});

cmd.hear(/^(?:–∏–Ω—Ñ–∞|—à–∞–Ω—Å|–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å)\s([^]+)$/i, async (message, bot) => {
	const phrase = utils.pick(['—à–∞–Ω—Å —Ä–∞–≤–µ–Ω']);
	const percent = utils.random(100);

	return bot(`${phrase} ${percent}%`)
});

cmd.hear(/^(?:–≤—ã–±–µ—Ä–∏)\s([^]+)\s(?:–∏–ª–∏)\s([^]+)$/i, async (message, bot) => {
	const first = message.args[1];
	const second = message.args[2];

	const phrase = utils.pick([`–∫–æ–Ω–µ—á–Ω–æ –∂–µ ${utils.random(1, 2)} –≤–∞—Ä–∏–∞–Ω—Ç`, `—è –ø—Ä–µ–¥–ø–æ—á–∏–Ω–∞—é –≤—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç - ${utils.random(1, 2)}`]);
	return bot(`${phrase}`);
});

cmd.hear(/^(?:–ø—Ä–æ—Ñ–∏–ª—å|üìÑ–ü—Ä–æ—Ñ–∏–ª—å)$/i, async (message, bot) => {
	let text = ``;

	text += `üÜî–ò–≥—Ä–æ–≤–æ–π ID:  ${message.user.uid}\n`;
	text += `üíé–ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$\n`;
	text += `üí≥–í –±–∞–Ω–∫–µ:  ${utils.sp(message.user.bank)}$\n`;
	text += `üçπ–°—ã—Ç–æ—Å—Ç—å:  ${message.user.golod}\n`;	
	if(message.user.transport.strana) text += `üá∫üá∏–°—Ç—Ä–∞–Ω–∞: ${stranas[message.user.transport.strana - 1].name}\n`;
	if(message.user.transport.pitom) text += `üêº–ü–∏—Ç–æ–º–µ—Ü:  ${pitoms[message.user.transport.pitom - 1].name}\n`;
	text += `üåü–†–µ–π—Ç–∏–Ω–≥:  ${utils.sp(message.user.rating)}\n`;
	if(message.user.work) text += `üëî–†–∞–±–æ—Ç–∞: ${works[message.user.work - 1].name}\n`;
	text += `üåø–£—Ä–æ–≤–µ–Ω—å:  ${message.user.level} [${message.user.exp}/24]\n`;
	text += `üîã–ë–∏—Ç–∫–æ–∏–Ω–æ–≤:  ${utils.sp(message.user.btc)}\n\n`;

	if(message.user.transport.shlapa) text += `${shlapas[message.user.transport.shlapa - 1].name}\n`;
	if(message.user.transport.golova) text += `${golovas[message.user.transport.golova - 1].name}\n`;
	if(message.user.transport.rubahka) text += `${rubahkas[message.user.transport.rubahka - 1].name}\n`;
	if(message.user.transport.obyv) text += `${obyvs[message.user.transport.obyv - 1].name}\n`;

	if(message.user.ryuda) text += `\nüåæ–¢—Ä–∞–≤—ã: ${utils.sp(message.user.ryuda)}\n`;
	return bot(`—Ç–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n${text}`);
});

cmd.hear(/^(?:–∏–º—É—â–µ—Å—Ç–≤–æ)$/i, async (message, bot) => {
	
	    let text = ``;
		if(message.user.realty.home) text += `üè°–î–æ–º: ${homes[message.user.realty.home - 1].name}\n`;
		if(message.user.business) text += `üè¢–ë–∏–∑–Ω–µ—Å: ${businesses[message.user.business - 1].name}\n`;	
		if(message.user.realty.apartment) text += `üè®–ö–≤–∞—Ä—Ç–∏—Ä–∞: ${apartments[message.user.realty.apartment - 1].name}\n`;
		if(message.user.misc.farm) text += `üö£–§–µ—Ä–º–∞: ${farms[message.user.misc.farm - 1].name}\n`;
		if(message.user.transport.wood) text += `üî´–§–∏–≥—É—Ä–∫–∞: ${woods[message.user.transport.wood - 1].name}\n`;
		if(message.user.transport.pitom) text += `üêæ–ü–∏—Ç–æ–º–µ—Ü: ${pitoms[message.user.transport.pitom - 1].name}\n`;

		if(message.user.transport.car) text += `üöó–ú–∞—à–∏–Ω–∞: ${cars[message.user.transport.car - 1].name}\n`;
		if(message.user.transport.moto) text += `üèç–ë–∞–π–∫: ${motos[message.user.transport.moto - 1].name}\n`;
		if(message.user.transport.yacht) text += `üö§–Ø—Ö—Ç–∞: ${yachts[message.user.transport.yacht - 1].name}\n`;
		if(message.user.transport.airplane) text += `‚úà–°–∞–º–æ–ª–µ—Ç: ${airplanes[message.user.transport.airplane - 1].name}\n`;
		if(message.user.transport.helicopter) text += `üöÅ–í–µ—Ä—Ç–æ–ª–µ—Ç: ${helicopters[message.user.transport.helicopter - 1].name}\n`;

		if(message.user.transport.car || message.user.transport.yacht || message.user.transport.golova || message.user.transport.airplane || message.user.transport.helicopter || message.user.transport.telik ||
		message.user.realty.home || message.user.realty.apartment ||
		message.user.misc.phone || message.user.misc.farm || message.user.transport.table || message.user.transport.moto || message.user.transport.copter || message.user.business)		
		
		if(message.user.misc.phone) text += `üì±–¢–µ–ª–µ—Ñ–æ–Ω: ${phones[message.user.misc.phone - 1].name}\n`;
		if(message.user.transport.table) text += `‚å®–ü–ª–∞–Ω—à–µ—Ç: ${tables[message.user.transport.table - 1].name}\n`;
		if(message.user.transport.telik) text += `üì∫–¢–µ–ª–µ–≤–∏–∑–æ—Ä:  ${teliks[message.user.transport.telik - 1].name}\n`;
		if(message.user.transport.cam) text += 	`üì∑–ö–∞–º–µ—Ä–∞: ${cams[message.user.transport.cam - 1].name}\n`;
		if(message.user.transport.copter) text += `üö°–ö–≤–∞–¥—Ä–∏–∫: ${copters[message.user.transport.copter - 1].name}\n`;
		return bot(`–í–∞—à–µ –∏–º—É—â–µ—Å—Ç–≤–æ:\n${text}`);
});

cmd.hear(/^(?:–±–∞–ª–∞–Ω—Å)$/i, async (message, bot) => {
	let text = `—è –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —Å –Ω–æ–≤—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏`;
	if(message.user.btc) text += `\nüíé–ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}‡∏ø`;

	return bot(text);
});

cmd.hear(/^(?:–±–∞–Ω–∫)$/i, async (message, bot) => {
	return bot(`–Ω–∞ —Å—á–µ—Ç—É ${utils.sp(message.user.bank)}$`);
});

cmd.hear(/^(?:–±–∞–Ω–∫)\s(?:—Å–Ω—è—Ç—å)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.bank);

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(message.args[1] > message.user.bank) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ãüòï`);
	else if(message.args[1] <= message.user.bank)
	{
		message.user.balance += message.args[1];
		message.user.bank -= message.args[1];

		return bot(`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ ${utils.sp(message.args[1])}$
‚ôª–ë–∞–ª–∞–Ω—Å –≤ –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
	}
});

cmd.hear(/^(?:–±–∞–Ω–∫)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;
	if(message.args[1] <= 5000) return bot(`–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: 5.000$üòë`);
	if(message.args[1] > 100000000) return bot(`–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 100.000.000$`);

	if(message.args[1] > message.user.balance) return bot(`—É –í–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ãüòï`);
	else if(message.args[1] <= message.user.balance)
	{
		message.user.balance -= message.args[1];
		message.user.bank += message.args[1];

		return bot(`–í—ã –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç ${utils.sp(message.args[1])}$`);
	}
});

cmd.hear(/^(?:—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)\s(–≤—ã–∫–ª|–≤–∫–ª)$/i, async (message, bot) => {
	if(message.args[1].toLowerCase() === '–≤—ã–∫–ª')
	{
		message.user.notifications = false;
		return bot(`—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã! üîï`);
	}

	if(message.args[1].toLowerCase() === '–≤–∫–ª')
	{
		message.user.notifications = true;
		return bot(`—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã! üîî`);
	}
});

cmd.hear(/^(?:give)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));
if(message.senderId !== 542439242| message.senderId !== 542439242) return;
	if(message.args[2] <= 0) return;

	{
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

		if(user.uid === message.user.uid) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

		message.user.balance += message.args[1];


		await bot(`–≤—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}$`);
		if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `
üì•‚Ä∫ –ù–∞ –≤–∞—à —Å—á–µ—Ç –ø–æ—Å—Ç—É–ø–∏–ª –ø–ª–∞—Ç–µ–∂ ${utils.sp(message.args[2])} –æ—Ç ${message.user.tag}
üîï–ß—Ç–æ–±—ã –≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ: ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª` });
	}
});

cmd.hear(/^(?:ban)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');


	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;
	if(message.user.admin == true) return

	{
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

		if(user.uid === message.user.uid) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

		user.ban = true;

		await bot(`–∏–≥—Ä–æ–∫ ${user.tag} –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (${utils.sp(message.args[2])}$)`);
		if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `
üö´‚Ä∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${message.user.tag} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –í–∞–º –∞–∫–∫–∞—É–Ω—Ç –ø–æ –ø—Ä–∏—á–∏–Ω–µ: ${utils.sp(message.args[2])}!
` });
	}
});



cmd.hear(/^(?:unban)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');


	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;
	if(message.user.admin == true) return

	{
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

		if(user.uid === message.user.uid) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);


		user.ban = true;

		await bot(`–∏–≥—Ä–æ–∫ ${user.tag} —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (${utils.sp(message.args[2])}$)`);
		if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `
‚òë‚Ä∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${message.user.tag} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –í–∞—Å ${utils.sp(message.args[2])}!
` });
	}
});

cmd.hear(/^(?:set)\s([0-9]+)\s(.*)\s(.*)$/i, async (message, bot) => {
	if(message.user.admin == false) return;
	message.args[3] = message.args[3].replace(/(\.|\,)/ig, '');
	message.args[3] = message.args[3].replace(/(–∫|k)/ig, '000');
	message.args[3] = message.args[3].replace(/(–º|m)/ig, '000000');

	if(Number(message.args[3])) message.args[3] = Math.floor(Number(message.args[3]));
	if(message.args[3] == "true" || message.args[3] == "false") message.args[3] = message.args[3] == "true" ? true : false;
	if(message.args[2] == "admin" && bot_owner != message.user.id) return bot(`–¥–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç`);

	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

	if(user[message.args[2]] == null) return bot(`–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ`);
	user[message.args[2]] = message.args[3];

	return bot(`–≤—ã —Å–º–µ–Ω–∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ ${message.args[2]} –∏–≥—Ä–æ–∫—É ${user.tag} –Ω–∞: ${message.args[3]}`);
});

/*cmd.hear(/^(?:–±–∞–Ω)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.admin == false) return;

	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

	user.ban = true;

	return bot(`–≤—ã –∑–∞–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ ${user.tag}`);
});

cmd.hear(/^(?:—Ä–∞–∑–±–∞–Ω)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.admin == false) return;

	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

	user.ban = false;

	return bot(`–≤—ã —Ä–∞–∑–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ ${user.tag}`);
});*/

cmd.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;

	if(message.args[2] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤`);
	else if(message.args[2] <= message.user.balance)
	{
		if(message.user.limit == null) message.user.limit = { timer: utils.time(), sent: 0 };
		if(utils.time() - message.user.limit.timer >= 86400) { message.user.limit.timer = utils.time(); message.user.limit.sent = 0; }
		if(message.args[2] + message.user.limit.sent > 10000000) return bot(`–¥–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º. –í—Å–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ: ${utils.sp(10000000 - message.user.limit.sent)}$`)
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

		if(user.uid === message.user.uid) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

		message.user.balance -= message.args[2];
		message.user.limit.sent += message.args[2];
		user.balance += message.args[2];

		await bot(`–≤—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}$`);
		if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `
üí∏–ò–≥—Ä–æ–∫ ${message.user.tag} –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º ${utils.sp(message.args[2])}$!
üîï–ß—Ç–æ–±—ã –≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ: ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª` });
	}
});

cmd.hear(/^(?:—Ä–µ–π—Ç–∏–Ω–≥)$/i, async (message, bot) => {
	return bot(`–≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}üèÜ`);
});

cmd.hear(/^(?:–Ω–∏–∫)\s(–≤–∫–ª|–≤—ã–∫–ª)$/i, async (message, bot) => {
	if(message.args[1].toLowerCase() === '–≤–∫–ª')
	{
		message.user.mention = true;
		return bot(`–∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.`);
	}

	if(message.args[1].toLowerCase() === '–≤—ã–∫–ª')
	{
		message.user.mention = false;
		return bot(`–∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∞!`);
	}
});

cmd.hear(/^(?:–Ω–∏–∫)\s(.*)$/i, async (message, bot) => {
	if(message.args[1].length > 10) return bot(`—Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å (–º–∞–∫—Å–∏–º—É–º: 10 —Å–∏–º–≤–æ–ª–æ–≤)`);

	message.user.tag = message.args[1];
	return bot(`—Ç–µ–ø–µ—Ä—å –≤—ã ¬´${message.user.tag}¬ª`);
});

cmd.hear(/^(?:–º–∞–≥–∞–∑–∏–Ω)$/i, async (message, bot) => {
	return bot(`–º–∞–≥–∞–∑–∏–Ω: 

üè¢–ë–∏–∑–Ω–µ—Å—ã 
üè°–î–æ–º–∞
üöó–ú–∞—à–∏–Ω—ã
‚úà–°–∞–º–æ–ª–µ—Ç—ã 
üöÅ–í–µ—Ä—Ç–æ–ª–µ—Ç—ã 
üö§–Ø—Ö—Ç—ã 
üèç–ú–æ—Ç–æ—Ü–∏–∫–ª—ã 

‚å®–ü–ª–∞–Ω—à–µ—Ç—ã
üì±–¢–µ–ª–µ—Ñ–æ–Ω—ã
üì∑–ö–∞–º–µ—Ä—ã 

üëí–®–ª—è–ø—ã
üôÇ–ì–æ–ª–æ–≤—ã 
üëï–†—É–±–∞—à–∫–∏ 
üëü–û–±—É–≤—å

üîã–§–µ—Ä–º—ã
üèÜ–†–µ–π—Ç–∏–Ω–≥ 
üíé–ë–∏—Ç–∫–æ–∏–Ω—ã
üêæ–ü–∏—Ç–æ–º—Ü—ã 
üì¶–ö–µ–π—Å—ã`);
});

cmd.hear(/^(?:–ø—Ä–æ–¥–∞—Ç—å)\s(.*)\s?(.*)?$/i, async (message, bot) => {
	let options = {
		count: null
	}

	message.args[2] = message.args[1].split(' ')[1];

	if(!message.args[2]) options.count = 1;
	if(message.args[2])
	{
		message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
		message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
		message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');

		message.args[2] = Math.floor(Number(message.args[2]));
		if(message.args[2] <= 0) return;

		if(!message.args[2]) options.count = 1;
		else if(message.args[2]) options.count = message.args[2];
	}
	
	if(/–∫–≤–∞–¥—Ä–æ–∫–æ–ø—Ç–µ—Ä/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.copter) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ç–≤–∞–¥—Ä–æ–∫–æ–ø—Ç–µ—Ä–∞‚õî`);
		let a = Math.floor(copters[message.user.transport.copter - 1].cost * 0.85);

		message.user.balance += Math.floor(copters[message.user.transport.copter - 1].cost * 0.85);
		message.user.transport.copter = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –∫–≤–∞–¥—Ä–æ–∫–æ–ø—Ç–µ—Ä –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–¢–µ–ª–µ–≤–∏–∑–æ—Ä/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.telik) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞‚õî`);
		let a = Math.floor(teliks[message.user.transport.telik - 1].cost * 0.85);

		message.user.balance += Math.floor(teliks[message.user.transport.telik - 1].cost * 0.85);
		message.user.transport.telik = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π —Ç–µ–ª–µ–≤–∏–∑–æ—Ä –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–§–∏–≥—É—Ä–∫/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.telik) return bot(`—É –≤–∞—Å –Ω–µ—Ç –∏–≥—Ä—É—à–∫–∏.`);
		let a = Math.floor(woods[message.user.transport.wood - 1].cost * 0.85);

		message.user.balance += Math.floor(woods[message.user.transport.wood - 1].cost * 0.85);
		message.user.transport.wood = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π —Ç–µ–ª–µ–≤–∏–∑–æ—Ä –∑–∞ ${utils.sp(a)}$`);
	}
	
	if(/–ü–∏—Ç–æ–º—Ü–∞|–ø–∏—Ç–æ–º–µ—Ü/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.pitom) return bot(`—É –≤–∞—Å –Ω–µ—Ç –ø–∏—Ç–æ–º—Ü–∞‚õî`);
		let a = Math.floor(pitoms[message.user.transport.pitom - 1].cost * 0.85);

		message.user.balance += Math.floor(pitoms[message.user.transport.pitom - 1].cost * 0.85);
		message.user.transport.pitom = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞ –∑–∞ ${utils.sp(a)}$`);
	}
	
		if(/–≥–æ–ª–æ–≤/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.golova) return bot(`—É –≤–∞—Å –Ω–µ—Ç –≥–æ–ª–æ–≤—ã –Ω–∞ –ø–ª–µ—á–∞—Ö!!‚õî`);
		let a = Math.floor(golovas[message.user.transport.golova - 1].cost * 0.85);

		message.user.balance += Math.floor(golovas[message.user.transport.golova - 1].cost * 0.85);
		message.user.transport.golova = 0;

		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –≥–æ–ª–æ–≤—É –∑–∞ ${utils.sp(a)}$`);
	}
	
		if(/—Ä—É–±–∞—à–∫/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.rubahka) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ä—É–±–∞—à–∫–∏‚õî`);
		let a = Math.floor(rubahkas[message.user.transport.rubahka - 1].cost * 0.85);

		message.user.balance += Math.floor(rubahkas[message.user.transport.rubahka - 1].cost * 0.85);
		message.user.transport.rubahka = 0;

		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ —Ä—É–±–∞—à–∫—É –∑–∞ ${utils.sp(a)}$`);
	}
	
		if(/–æ–±—É–≤/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.obyv) return bot(`—É –≤–∞—Å –Ω–µ—Ç –∫—Ä–æ—Å–æ–≤–æ–∫‚õî`);
		let a = Math.floor(obyvs[message.user.transport.obyv - 1].cost * 0.85);

		message.user.balance += Math.floor(obyvs[message.user.transport.obyv - 1].cost * 0.85);
		message.user.transport.obyv = 0;

		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ –æ–±—É–≤—å –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–∫–∞–º–µ—Ä(—ã|–∞|—É)/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.cam) return bot(`—É –≤–∞—Å –Ω–µ—Ç –∫–∞–º–µ—Ä—ã‚õî`);
		let a = Math.floor(cams[message.user.transport.cam - 1].cost * 0.85);

		message.user.balance += Math.floor(cams[message.user.transport.cam - 1].cost * 0.85);
		message.user.transport.cam = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –∫–∞–º–µ—Ä—É –∑–∞ ${utils.sp(a)}$`);
	}

	if(/—à–ª—è–ø–∞/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.shlapa) return bot(`—É –≤–∞—Å –Ω–µ—Ç —à–ª—è–ø—ã‚õî`);
		let a = Math.floor(shlapas[message.user.transport.shlapa - 1].cost * 0.85);

		message.user.balance += Math.floor(shlapas[message.user.transport.shlapa - 1].cost * 0.85);
		message.user.transport.shlapa = 0;

		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ —à–ª—è–ø—É –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–º–æ—Ç–æ—Ü–∏–∫–ª/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.moto) return bot(`—É –≤–∞—Å –Ω–µ—Ç –º–æ—Ç–æ—Ü–∏–∫–ª–∞‚õî`);
		let a = Math.floor(motos[message.user.transport.moto - 1].cost * 0.85);

		message.user.balance += Math.floor(motos[message.user.transport.moto - 1].cost * 0.85);
		message.user.transport.moto = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –º–æ—Ç–æ—Ü–∏–∫–ª –∑–∞ ${utils.sp(a)}$`);
	}
	
	if(/–ø–ª–∞–Ω—à–µ—Ç/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.table) return bot(`—É –≤–∞—Å –Ω–µ—Ç –ø–ª–∞–Ω—à–µ—Ç–∞‚õî`);
		let a = Math.floor(tables[message.user.transport.table - 1].cost * 0.85);

		message.user.balance += Math.floor(tables[message.user.transport.table - 1].cost * 0.85);
		message.user.transport.table = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –ø–ª–∞–Ω—à–µ—Ç –∑–∞ ${utils.sp(a)}$`);
	}
	
	if(/–º–∞—à–∏–Ω/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.car) return bot(`—É –≤–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã‚õî`);
		let a = Math.floor(cars[message.user.transport.car - 1].cost * 0.85);

		message.user.balance += Math.floor(cars[message.user.transport.car - 1].cost * 0.85);
		message.user.transport.car = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –º–∞—à–∏–Ω—É –∑–∞ ${utils.sp(a)}$`);
	}

	if(/—è—Ö—Ç/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.yacht) return bot(`—É –≤–∞—Å –Ω–µ—Ç —è—Ö—Ç—ã‚õî`);
		let a = Math.floor(yachts[message.user.transport.yacht - 1].cost * 0.85);

		message.user.balance += Math.floor(yachts[message.user.transport.yacht - 1].cost * 0.85);
		message.user.transport.yacht = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é —è—Ö—Ç—É –∑–∞ ${utils.sp(a)}$`);
	}

	if(/—Å–∞–º–æ–ª(–µ|—ë|–π–æ)—Ç/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.airplane) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Å–∞–º–æ–ª–µ—Ç–∞‚õî`);
		let a = Math.floor(airplanes[message.user.transport.airplane - 1].cost * 0.85);

		message.user.balance += Math.floor(airplanes[message.user.transport.airplane - 1].cost * 0.85);
		message.user.transport.airplane = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π —Å–∞–º–æ–ª—ë—Ç –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–≤(–∏|–µ|—è)—Ä—Ç(–∞|–æ)–ª(–µ|—ë|–π–æ)—Ç/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.helicopter) return bot(`—É –≤–∞—Å –Ω–µ—Ç –≤–µ—Ä—Ç–æ–ª–µ—Ç–∞‚õî`);
		let a = Math.floor(helicopters[message.user.transport.helicopter - 1].cost * 0.85);

		message.user.balance += Math.floor(helicopters[message.user.transport.helicopter - 1].cost * 0.85);
		message.user.transport.helicopter = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –≤–µ—Ä—Ç–æ–ª—ë—Ç –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–¥–æ–º/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.realty.home) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–æ–º–∞‚õî`);
		let a = Math.floor(homes[message.user.realty.home - 1].cost * 0.85);

		message.user.balance += Math.floor(homes[message.user.realty.home - 1].cost * 0.85);
		message.user.realty.home = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –¥–æ–º –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–∫–≤–∞—Ä—Ç–∏—Ä/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.realty.apartment) return bot(`—É –≤–∞—Å –Ω–µ—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã‚õî`);
		let a = Math.floor(apartments[message.user.realty.apartment - 1].cost * 0.85);

		message.user.balance += Math.floor(apartments[message.user.realty.apartment - 1].cost * 0.85);
		message.user.realty.apartment = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –∫–≤–∞—Ä—Ç–∏—Ä—É –∑–∞ ${utils.sp(a)}$`);
	}

	if(/—Ç–µ–ª–µ—Ñ–æ–Ω/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.misc.phone) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞‚õî`);
		let a = Math.floor(phones[message.user.misc.phone - 1].cost * 0.85);

		message.user.balance += Math.floor(phones[message.user.misc.phone - 1].cost * 0.85);
		message.user.misc.phone = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –∑–∞ ${utils.sp(a)}$`);
	}

	if(/—Ñ–µ—Ä–º/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.misc.farm) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ñ–µ—Ä–º‚õî`);
		let a = Math.floor(farms[message.user.misc.farm - 1].cost * 0.85);

		message.user.balance += Math.floor(farms[message.user.misc.farm - 1].cost * 0.85);
		message.user.misc.farm = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é —Ñ–µ—Ä–º—É –∑–∞ ${utils.sp(a)}$`);
	}

	if(/—Ä–µ–π—Ç–∏–Ω–≥|–∫—É–±/i.test(message.args[1].toLowerCase()))
	{
		if(options.count > message.user.rating) return bot(`—É –≤–∞—Å –Ω–µ—Ç –∫—É–±–∫–æ–≤‚õî`);
		let a = (20 * options.count);

		message.user.balance += Math.floor(a);
		message.user.rating -= options.count;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ ${options.count} ${utils.decl(options.count, ['–∫—É–±–æ–∫', '–∫—É–±–æ–≤', '–∫—É–±–∫–æ–≤'])} –∑–∞ ${utils.sp(Math.floor(a))}`);
	}

	if(/—Ç—Ä–∞–≤/i.test(message.args[1].toLowerCase()))
	{
		if(options.count > message.user.ryuda) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ç—Ä–∞–≤—ã‚õî`);
		let a = (20 * options.count);

		message.user.balance += Math.floor(a);
		message.user.ryuda -= options.count;

		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ ${options.count} ${utils.decl(options.count, ['—Ç—Ä–∞–≤—ã', '—Ç—Ä–∞–≤—ã', '—Ç—Ä–∞–≤—ã'])} –∑–∞ ${utils.sp(Math.floor(a))}$`);
	}

	if(/–±–∏–∑–Ω–µ—Å/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.business) return bot(`—É –≤–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞‚õî`);
		let a = Math.floor(businesses[message.user.business - 1].cost * 0.85);

		message.user.balance += Math.floor(a);
		message.user.business = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –±–∏–∑–Ω–µ—Å –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–±–∏—Ç–∫–æ–∏–Ω/i.test(message.args[1].toLowerCase()))
	{
		if(options.count > message.user.btc) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏—Ç–∫–æ–∏–Ω–æ–≤‚ùó`);
		let a = Math.floor(btc * options.count);

		message.user.balance += Math.floor(a);
		message.user.btc -= options.count;

		bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ ${options.count}‚Çø –∑–∞ ${utils.sp(a)}$`)
		message.sendSticker(`13361`);
	}
});

cmd.hear(/^(?:–º–∞—à–∏–Ω—ã|–º–∞—à–∏–Ω–∞)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–∞–≤—Ç–æ–º–æ–±–∏–ª–∏: 
${message.user.transport.car === 1 ? 'üöô' : 'üöô'} 1. Lada Granta | 350.000$
${message.user.transport.car === 2 ? 'üöô' : 'üöô'} 2. Hyundai Solaris | 525.000$
${message.user.transport.car === 3 ? 'üöô' : 'üöô'} 3. Kia Rio | 750.000$
${message.user.transport.car === 4 ? 'üöô' : 'üöô'} 4. Skoda Octavia | 1.000.000$

${message.user.transport.car === 5 ? 'üöó' : 'üöó'} 5. Kia Optima | 1.900.000$
${message.user.transport.car === 6 ? 'üöó' : 'üöó'} 6. Lexus RX350 | 2.750.000$
${message.user.transport.car === 7 ? 'üöó' : 'üöó'} 7. Tayota Land Cruiser | 3.000.000$
${message.user.transport.car === 8 ? 'üöó' : 'üöó'} 8. Mercedes-Benz A-Class | 5.000.000$
${message.user.transport.car === 9 ? 'üöó' : 'üöó'} 9. BMW 8-Series | 10.000.000$
${message.user.transport.car === 10 ? 'üöó' : 'üöó'} 10. Land Rover Range Rover | 17.500.000$
${message.user.transport.car === 11 ? 'üöó' : 'üöó'} 11. Lamborghini Huracan | 25.000.000$
${message.user.transport.car === 12 ? 'üöó' : 'üöó'} 12. Ferrari 812 Superfast | 30.000.000$

${message.user.transport.car === 13 ? 'üöÄ' : 'üöÄ'} 13. Porsche 911 | 50.000.000$ 
${message.user.transport.car === 14 ? 'üöÄ' : 'üöÄ'} 14. Mercedes-Benz S-Class | 75.000.000$
${message.user.transport.car === 15 ? 'üöÄ' : 'üöÄ'} 15. Lamborghini Aventador | 100.000.000$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ ¬´–ú–∞—à–∏–Ω—ã [–Ω–æ–º–µ—Ä]¬ª`);

	const sell = cars.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.car) return bot(`—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –º–∞—à–∏–Ω–∞! –û—Ç–ø—Ä–∞–≤—å—Ç–µ: <<–ü—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É>>.`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.car = sell.id;

		return bot(`–≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});


cmd.hear(/^(?:—Ñ–µ—Ä–º—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–º–∞–π–Ω–∏–Ω–≥–æ–≤—ã–µ —Ñ–µ—Ä–º—ã: 
${message.user.misc.farm === 1 ? 'üåê' : 'üåê'} 1. Antminer T17 1‡∏ø/12—á. | 150.000$
${message.user.misc.farm === 2 ? 'üåê' : 'üåê'} 2. –§–µ—Ä–º–∞ –¥–ª—è –º–∞–π–Ω–∏–Ω–≥–∞ | 500.000$
${message.user.misc.farm === 3 ? 'üåê' : 'üåê'} 3. –®–∞—Ö—Ç–∞ –¥–ª—è –º–∞–π–Ω–∏–Ω–≥–∞ | 3.000.000$
üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–§–µ—Ä–º—ã [–Ω–æ–º–µ—Ä]>>`);

	const sell = farms.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.misc.farm = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–∫–≤–∞–¥—Ä–æ–∫–æ–ø—Ç–µ—Ä|–∫–≤–∞–¥—Ä–æ–∫–æ–ø—Ç–µ—Ä—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–∫–≤–∞–¥—Ä–æ–∫–æ–ø—Ç–µ—Ä—ã: 
${message.user.transport.copter === 1 ? 'üéæ' : '‚öΩ'} 1. Hubsan X4 300.000$
${message.user.transport.copter === 2 ? 'üéæ' : '‚öΩ'} 2. Sima X5C 350.000$
${message.user.transport.copter === 3 ? 'üéæ' : '‚öΩ'} 3. DJI phantom 400.000$
${message.user.transport.copter === 4 ? 'üéæ' : '‚öΩ'} 4. FPV mt2204 500.000$
${message.user.transport.copter === 5 ? 'üéæ' : '‚öΩ'} 5. RTX Copter 100$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–ö–≤–∞–¥—Ä–æ–∫–æ–ø—Ç–µ—Ä—ã [–Ω–æ–º–µ—Ä]>>`);

	const sell = copters.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.copter) return bot(`—É –í–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è –∫–≤–∞–¥—Ä–æ–∫–æ–ø—Ç–µ—Ä. –û—Ç–ø—Ä–∞–≤—å—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å –∫–≤–∞–¥—Ä–æ–∫–æ–ø—Ç–µ—Ä—ã>>`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.copter = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:—Ç–µ–ª–µ–≤–∏–∑–æ—Ä|—Ç–µ–ª–µ–≤–∏–∑–æ—Ä—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`—Ç–µ–ª–µ–≤–∏–∑–æ—Ä—ã: 
${message.user.transport.telik === 1 ? 'üéæ' : '‚öΩ'} 1. Samsung 3.000$
${message.user.transport.telik === 2 ? 'üéæ' : '‚öΩ'} 2. Haier 5.000$
${message.user.transport.telik === 3 ? 'üéæ' : '‚öΩ'} 3. LG 43LK 8.000$
${message.user.transport.telik === 4 ? 'üéæ' : '‚öΩ'} 4. Artel 32 12.000$
${message.user.transport.telik === 5 ? 'üéæ' : '‚öΩ'} 5. Sony KDL-40 20.000$
${message.user.transport.telik === 6 ? 'üéæ' : '‚öΩ'} 6. Elenberg 30.000$
${message.user.transport.telik === 7 ? 'üéæ' : '‚öΩ'} 7. Toshiba 32 45.000$
${message.user.transport.telik === 8 ? 'üéæ' : '‚öΩ'} 8. Philips 60.000$
${message.user.transport.telik === 9 ? 'üéæ' : '‚öΩ'} 9. ERGO LE43 75.000$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã [–Ω–æ–º–µ—Ä]>>`);

	const sell = teliks.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.telik) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–µ–ª–µ–≤–∏–∑–æ—Ä. –û—Ç–ø—Ä–∞–≤—å—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å —Ç–µ–ª–µ–≤–∏–∑–æ—Ä>>.`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.telik = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–ì–æ–ª–æ–≤–∞|–≥–æ–ª–æ–≤—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–≥–æ–ª–æ–≤—ã –¥–ª—è –ø–ª–µ—á–µ–π: 
${message.user.transport.golova === 1 ? 'üòé' : 'üòé'} 1.  –ö—Ä—É—Ç–æ–π 0$
${message.user.transport.golova === 2 ? 'üò°' : 'üò°'} 2.  –ó–ª–æ–π 10$
${message.user.transport.golova === 3 ? 'üëΩ' : 'üëΩ'} 3.  –ò–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–Ω–∏–Ω 20$
${message.user.transport.golova === 4 ? 'üòá' : 'üòá'} 4.  –ê–Ω–≥–µ–ª 30$
${message.user.transport.golova === 5 ? '‚òπ' : '‚òπ'} 5.  –ì—Ä—É—Å—Ç–Ω—ã–π 40$
${message.user.transport.golova === 6 ? 'üë∫' : 'üë∫'} 6.  –î—å—è–≤–æ–ª 50$
${message.user.transport.golova === 7 ? 'üëÆ' : 'üëÆ'} 7.  –ü–æ–ª–∏—Ü–µ–π—Å–∫–∏–π 60$
${message.user.transport.golova === 8 ? 'ü§ì' : 'ü§ì'} 8.  –ë–∞—Ç–∞–Ω–∏–∫ 70$
${message.user.transport.golova === 9 ? 'ü§†' : 'ü§†'} 9.  –ö–æ–≤–±–æ–π 80$
${message.user.transport.golova === 10 ? 'üòà' : 'üòà'} 10.  –î—å—è–≤–æ–ª 100$
${message.user.transport.golova === 11 ? 'üëª' : 'üëª'} 11.  Marshmello 100.000$üÜï

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–ì–æ–ª–æ–≤–∞ [–Ω–æ–º–µ—Ä]>>`);

	const sell = golovas.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.golova) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –≥–æ–ª–æ–≤–∞ –Ω–∞ –ø–ª–µ—á–∞—Ö. –í–≤–µ–¥–∏—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å –≥–æ–ª–æ–≤—É>>`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤‚ùó`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.golova = sell.id;

		return bot(`–≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});


cmd.hear(/^(?:–†—É–±–∞—à–∫–∞|–†—É–±–∞—à–∫–∏)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`—Ä—É–±–∞—à–∫–∏: 
${message.user.transport.rubahka === 1 ? 'üëî' : 'üëî'} 1.Leviton 75.000$
${message.user.transport.rubahka === 2 ? 'üëï' : 'üëï'} 2.Gucci 125.000$
üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–†—É–±–∞—à–∫–∞ [–Ω–æ–º–µ—Ä]>>`);

	const sell = rubahkas.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.rubahka) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä—É–±–∞—à–∫–∞. –í–≤–µ–¥–∏—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å —Ä—É–±–∞—à–∫–∞>>!`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.rubahka = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ —Ä—É–±–∞—à–∫—É <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–û–±—É–≤—å|–ë–æ—Ç–∏–Ω–∫–∏)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–∫—Ä–æ—Å—Å–æ–≤–∫–∏: 
${message.user.transport.obyv === 1 ? 'üëû' : 'üëû'} 1. –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ 500$
${message.user.transport.obyv === 2 ? 'üëü' : 'üëü'} 1. –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ 2.500$
üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–û–±—É–≤—å [–Ω–æ–º–µ—Ä]>>`);

	const sell = obyvs.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.obyv) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –æ–±—É–≤—å. –í–≤–µ–¥–∏—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å –æ–±—É–≤—å>>.`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.obyv = sell.id;

		return bot(`–≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –æ–±—É–≤—å <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:—Ñ–µ–≥—É—Ä–∫–∏|—Ñ–∏–≥—É—Ä–∫–∏)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`—Ñ–∏–≥—É—Ä–∫–∏ –¥–ª—è –æ–¥–µ–∂–¥—ã: 
${message.user.transport.wood === 1 ? 'üåª' : 'üåª'} 1. –û–¥—É–≤–∞–Ω—á–∏–∫ 3.000$
${message.user.transport.wood === 2 ? 'üåπ' : 'üåπ'} 2. –†–æ–∑–∞ 6.000$
${message.user.transport.wood === 3 ? 'üå¥' : 'üå¥'} 3. –ü–∞–ª—å–º–∞ 10.000$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–§–∏–≥—É—Ä–∫–∏ [–Ω–æ–º–µ—Ä]>>`);

	const sell = woods.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.wood) return bot(`—É –≤–∞—Å —É–∂–µ –∏–≥—Ä—É—à–∫–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å —Ñ–∏–≥—É—Ä–∫—É>>`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.wood = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–ö–∞–º–µ—Ä–∞|–∫–∞–º–µ—Ä—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–∫–∞–º–µ—Ä—ã: 
${message.user.transport.cam === 1 ? 'üì∑' : 'üì∑'} 1. Rekam DVC-540 | 6.300$
${message.user.transport.cam === 2 ? 'üì∑' : 'üì∑'} 2. Panasonic HC-V770 | 24.500$
${message.user.transport.cam === 3 ? 'üì∑' : 'üì∑'} 3. Sony FDR-AX700 | 81.000$
${message.user.transport.cam === 4 ? 'üì∑' : 'üì∑'} 4. Insta360 Titan | 1.250.000$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–ö–∞–º–µ—Ä—ã [–Ω–æ–º–µ—Ä]>>`);

	const sell = cams.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.cam) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–∞–º–µ—Ä–∞! –í–≤–µ–¥–∏—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å –∫–∞–º–µ—Ä—É>>.`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤‚ùó`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.cam = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–ü–∏—Ç–æ–º–µ—Ü|–ü–∏—Ç–æ–º—Ü—ã|üêØ–ü–∏—Ç–æ–º—Ü—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–ø–∏—Ç–æ–º—Ü—ã: 
üêõ:
${message.user.transport.pitom === 1 ? 'üêû' : 'üêû'} 1. –ñ—É–∫ | 5.000$  
${message.user.transport.pitom === 2 ? 'üï∑' : 'üï∑'} 2. –ü–∞—É–∫ | 10.000$
${message.user.transport.pitom === 3 ? 'üêù' : 'üêù'} 3. –ü—á–µ–ª–∞ | 15.000$
${message.user.transport.pitom === 4 ? 'ü¶ã' : 'ü¶ã'} 4. –ë–∞–±–æ—á–∫–∞ | 25–ö$ 
${message.user.transport.pitom === 5 ? 'üêå' : 'üêå'} 5. –£–ª–∏—Ç–∫–∞ | 30–ö$

üå≤: 
${message.user.transport.pitom === 6 ? 'ü¶é' : 'ü¶é'} 6. –Ø—â–µ—Ä–∏—Ü–∞ | 50–ö$ 
${message.user.transport.piton === 7 ? 'üê¢' : 'üê¢'} 7. –ß–µ—Ä–µ–ø–∞—Ö–∞ | 100–ö$ 
${message.user.transport.piton === 8 ? 'ü¶ú' : 'ü¶ú'} 8. –ü–æ–ø—É–≥–∞–π | 200–ö$ 

üíß: 
${message.user.transport.piton === 9 ? 'ü¶Ä' : 'ü¶Ä'} 9. –ö—Ä–∞–± | 300–ö$
${message.user.transport.piton === 10 ? 'ü¶ë' : 'ü¶ë'} 10. –ö–∞–ª—å–º–∞—Ä | 350–ö$
${message.user.transport.piton === 11 ? 'üê¨' : 'üê¨'} 11. –î–µ–ª—å—Ñ–∏–Ω | 1–ö–ö$ 

üåø:  
${message.user.transport.piton === 12 ? 'üê£' : 'üê£'} 12. –¶—ã–ø–∞ | 5.000$ 
${message.user.transport.piton === 13 ? 'ü¶Ü' : 'ü¶Ü'} 13. –£—Ç–∫–∞ | 25.000$ 
${message.user.transport.piton === 14 ? 'ü¶Ö' : 'ü¶Ö'} 14. –û—Ä–µ–ª | 50.000$
${message.user.transport.piton === 15 ? 'üêì' : 'üêì'} 15. –ö—É—Ä–∏—Ü–∞ | 175–ö$

üè°:   
${message.user.transport.piton === 16 ? 'üêø' : 'üêø'} 16. –ë–µ–ª–∫–∞ | 25.000$ 
${message.user.transport.piton === 17 ? 'üêπ' : 'üêπ'} 17. –•–æ–º—è–∫ | 100–ö$ 
${message.user.transport.piton === 18 ? 'üê∞' : 'üê∞'} 18. –ó–∞—è—Ü | 300–ö$
${message.user.transport.piton === 19 ? 'üêà' : 'üêà'} 19. –ö–æ—à–∫–∞ | 750–ö$ 
${message.user.transport.piton === 20 ? 'üêï' : 'üêï'} 20. –°–æ–±–∞–∫–∞ | 1–ö–ö$

üëë:  
${message.user.transport.piton === 21 ? 'üê®' : 'üê®'} 21. –ö—É–∞–ª–∞ | 325–ö$ 
${message.user.transport.piton === 22 ? 'üêª' : 'üêª'} 22. –ú–∏—à–∞ | 800–ö$ 
${message.user.transport.piton === 23 ? 'üêØ' : 'üêØ'} 23. –¢–∏–≥—Ä | 1.75–ö–ö$
${message.user.transport.piton === 24 ? 'ü¶Å' : 'ü¶Å'} 24. –õ–µ–≤ | 3.50–ö–ö$ 
${message.user.transport.piton === 25 ? 'üêº' : 'üêº'} 25. –ü–∞–Ω–¥–∞ | 10–ö–ö$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ ¬´–ø–∏—Ç–æ–º—Ü—ã [–Ω–æ–º–µ—Ä]¬ª`);

	const sell = pitoms.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.pitom) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü.`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.pitom = sell.id;

		return bot(`–≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–®–ª—è–ø–∞|–®–ª—è–ø—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–®–ª—è–ø—ã: 
${message.user.transport.shlapa === 1 ? 'üëí' : 'üëí'} 1. –ü–∞–Ω–∞–º–∞ 650$
${message.user.transport.shlapa === 2 ? 'üé©' : 'üé©'} 2. –¶–∏–ª–∏–Ω–¥—Ä 3.000$
${message.user.transport.shlapa === 3 ? 'üéì' : 'üéì'} 3. –®–∫–æ–ª–∞ 5.000$
${message.user.transport.shlapa === 4 ? '‚õë' : '‚õë'} 4. –ö–∞—Å–∫–∞ 7.500$
${message.user.transport.shlapa === 5 ? 'üëë' : 'üëë'} 5. –ö–æ—Ä–æ–Ω–∞ 15.000$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–®–ª—è–ø—ã [–Ω–æ–º–µ—Ä]>>`);

	const sell = shlapas.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.shlapa) return bot(`—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å —à–ª—è–ø–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å —à–ª—è–ø–∞>>`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤‚ùó`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.shlapa = sell.id;

		return bot(`–í—ã –∫—É–ø–∏–ª–∏ —à–ª—è–ø—É <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–º–æ—Ç–æ—Ü–∏–∫–ª|–º–æ—Ç–æ—Ü–∏–∫–ª—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–º–æ—Ç–æ—Ü–∏–∫–ª—ã: 
${message.user.transport.moto === 1 ? 'üõµ' : 'üõµ'} 1. Faggio 100.000$
${message.user.transport.moto === 2 ? 'üõµ' : 'üõµ'} 2. Freeway 250.000$
${message.user.transport.moto === 3 ? 'üõµ' : 'üõµ'} 3. PCJ-500 500.000$
${message.user.transport.moto === 4 ? 'üõµ' : 'üõµ'} 4. BF-400 750.000$
${message.user.transport.moto === 5 ? 'üõµ' : 'üõµ'} 5. NRG-500 1.500.000$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–ú–æ—Ç–æ—Ü–∏–∫–ª [–Ω–æ–º–µ—Ä]>>`);

	const sell = motos.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.moto) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –º–æ—Ç–æ—Ü–∏–∫–ª! –í–≤–µ–¥–∏—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å –º–æ—Ç–æ—Ü–∏–∫–ª>>.`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.moto = sell.id;

		return bot(`–≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–ø–ª–∞–Ω—à–µ—Ç|–ø–ª–∞–Ω—à–µ—Ç—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–ü–ª–∞–Ω—à–µ—Ç—ã: 
${message.user.transport.table === 1 ? 'üíª' : 'üíª'} 1. Digma Plane 7594 | 3.5–ö$
${message.user.transport.table === 2 ? 'üíª' : 'üíª'} 2. Huawei Mediapad T3 | 10–ö$
${message.user.transport.table === 3 ? 'üíª' : 'üíª'} 3. Samsung Galaxy Tab | 25–ö$
${message.user.transport.table === 4 ? 'üíª' : 'üíª'} 4. Apple iPad Pro | 50–ö$
${message.user.transport.table === 5 ? 'üíª' : 'üíª'} 5. Microsoft Surface | 75–ö$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–ü–ª–∞–Ω—à–µ—Ç [–Ω–æ–º–µ—Ä]>>`);

	const sell = tables.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.table) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–ª–∞–Ω—à–µ—Ç! –û—Ç–ø—Ä–∞–≤—å—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å –ø–ª–∞–Ω—à–µ—Ç>>.`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.table = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:—è—Ö—Ç—ã|—è—Ö—Ç–∞)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`—è—Ö—Ç—ã: 
${message.user.transport.yacht === 1 ? 'üö§' : 'üö§'} 1. Princess 60 1.500.000$
${message.user.transport.yacht === 2 ? 'üö§' : 'üö§'} 2. Wider 165 5.000.000$
${message.user.transport.yacht === 3 ? 'üö§' : 'üö§'} 3. Eclipse 10.000.000$
${message.user.transport.yacht === 4 ? 'üö§' : 'üö§'} 4. Dubai 17.500.000$
${message.user.transport.yacht === 5 ? 'üö§' : 'üö§'} 5. Streets of Monaco 30.000.000$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–Ø—Ö—Ç–∞ [–Ω–æ–º–µ—Ä]>>`);

	const sell = yachts.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.yacht) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —è—Ö—Ç–∞‚ùó –í–≤–µ–¥–∏—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å —è—Ö—Ç—É>>.`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.yacht = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});


cmd.hear(/^(?:—Å–∞–º–æ–ª(?:–µ|—ë)—Ç|—Å–∞–º–æ–ª(?:–µ|—ë)—Ç—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`—Å–∞–º–æ–ª–µ—Ç—ã: 
${message.user.transport.airplane === 1 ? '‚úà' : '‚úà'} 1. –ü–∞—Ä–∞–ø–ª–∞–Ω 900.000$
${message.user.transport.airplane === 2 ? '‚úà' : '‚úà'} 2. F-35A 10.000.000$
${message.user.transport.airplane === 3 ? '‚úà' : '‚úà'} 3. Boeing 747-430 Custom 25.000.000$
${message.user.transport.airplane === 4 ? '‚úà' : '‚úà'} 4. F-22 Raptor 100.000.000$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <<–°–∞–º–æ–ª–µ—Ç [–Ω–æ–º–µ—Ä]>>`);

	const sell = airplanes.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.airplane) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Å–∞–º–æ–ª—ë—Ç! –í–≤–µ–¥–∏—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å —Å–∞–º–æ–ª—ë—Ç>>.`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤‚ùó`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.airplane = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–≤–µ—Ä—Ç–æ–ª(?:–µ|—ë)—Ç|–≤–µ—Ä—Ç–æ–ª(?:–µ|—ë)—Ç—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–≤–µ—Ä—Ç–æ–ª–µ—Ç—ã: 
${message.user.transport.helicopter === 1 ? 'üöÅ' : 'üöÅ'} 1. Robinson R44 3.000.000$
${message.user.transport.helicopter === 2 ? 'üöÅ' : 'üöÅ'} 2. Leonardo AW109 Power 7.500.000$
${message.user.transport.helicopter === 3 ? 'üöÅ' : 'üöÅ'} 3. Bell 429WLG 16.000.000$
${message.user.transport.helicopter === 4 ? 'üöÅ' : 'üöÅ'} 4. Bell V-22 Osprey 32.575.000$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–í–µ—Ä—Ç–æ–ª–µ—Ç [–Ω–æ–º–µ—Ä]>>`);

	const sell = helicopters.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.helicopter) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –≤–µ—Ä—Ç–æ–ª—ë—Ç. –û—Ç–ø—Ä–∞–≤—å—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å –≤–µ—Ä—Ç–æ–ª—ë—Ç>>`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.helicopter = sell.id;

		return bot(`–≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});


cmd.hear(/^(?:–¥–æ–º|–¥–æ–º–∞)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–¥–æ–º–∞: 
${message.user.realty.home === 1 ? 'üè†' : 'üè†'} 1. –ü–æ–¥–≤–∞–ª - 150.000$
${message.user.realty.home === 2 ? 'üè†' : 'üè†'} 2. –î–æ–º–∏–∫ –Ω–∞ –¥–µ—Ä–µ–≤–µ - 800.000$
${message.user.realty.home === 3 ? 'üè†' : 'üè†'} 3. –î–æ–º –≤ –ª–µ—Å—É - 2.000.000$
${message.user.realty.home === 4 ? 'üè†' : 'üè†'} 4. –î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –¥–æ–º - 7.500.000$
${message.user.realty.home === 5 ? 'üè†' : 'üè†'} 5. –î–∞—á–∞ - 30.000.000$
${message.user.realty.home === 6 ? 'üè†' : 'üè†'} 6. –î–≤—É—Ö—ç—Ç–∞–∂–Ω–∞—è –¥–∞—á–∞ - 80.000.000$
${message.user.realty.home === 7 ? 'üè†' : 'üè†'} 7. –û—Å–æ–±–Ω—è–∫ - 187.500.000$
${message.user.realty.home === 8 ? 'üè†' : 'üè†'} 8. –î–æ–º –Ω–∞ –ø–ª—è–∂–µ - 500.000.000$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–î–æ–º [–Ω–æ–º–µ—Ä]>>`);

	const sell = homes.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.realty.home) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ–º. –í–≤–µ–¥–∏—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å –¥–æ–º>>!`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.realty.home = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–∫–≤–∞—Ä—Ç–∏—Ä–∞|–∫–≤–∞—Ä—Ç–∏—Ä—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–∫–≤–∞—Ä—Ç–∏—Ä—ã: 
${message.user.realty.apartment === 1 ? 'üè®' : 'üè®'} 1. –ß–µ—Ä–¥–∞–∫ 25.000$
${message.user.realty.apartment === 2 ? 'üè®' : 'üè®'} 2. –û–¥–Ω–æ–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ 300.000$
${message.user.realty.apartment === 3 ? 'üè®' : 'üè®'} 3. –î–≤—É—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ 1.000.000$
${message.user.realty.apartment === 4 ? 'üè®' : 'üè®'} 4. –ß–µ—Ç—ã—Ä–µ—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ 5.000.000$
${message.user.realty.apartment === 5 ? 'üè®' : 'üè®'} 5. –ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å –ï–≤—Ä–æ—Ä–µ–º–æ–Ω—Ç–æ–º 10.000.000$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–ö–≤–∞—Ä—Ç–∏—Ä–∞ [–Ω–æ–º–µ—Ä]>>`);

	const sell = apartments.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.realty.apartment) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä–∞! –í–≤–µ–¥–∏—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É>>.`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤‚ùó`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.realty.apartment = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:—Ç–µ–ª–µ—Ñ–æ–Ω|—Ç–µ–ª–µ—Ñ–æ–Ω—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`—Ç–µ–ª–µ—Ñ–æ–Ω—ã: 
${message.user.misc.phone === 1 ? 'üì±' : 'üì±'} 1. Turbo X Mercury | 4.500$
${message.user.misc.phone === 2 ? 'üì±' : 'üì±'} 2. Honor 8A | 7.500$
${message.user.misc.phone === 3 ? 'üì±' : 'üì±'} 3. Xiami Redmi 8 | 9.000$
${message.user.misc.phone === 4 ? 'üì±' : 'üì±'} 4. Galaxy A40 | 15.000$
${message.user.misc.phone === 5 ? 'üì±' : 'üì±'} 5. Xiami 9T | 19.000$
${message.user.misc.phone === 6 ? 'üì±' : 'üì±'} 6. Mi Note 10 | 28.000$
${message.user.misc.phone === 7 ? 'üì±' : 'üì±'} 7. iPhone 11 | 50.000$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ ¬´–¢–µ–ª–µ—Ñ–æ–Ω [–Ω–æ–º–µ—Ä]¬ª`);

	const sell = phones.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.misc.phone) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω.`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.misc.phone = sell.id;
		
		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});


cmd.hear(/^(?:–∫—É–ø–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥|–∫—É–ø–∏—Ç—å –∫—É–±–∫–∏)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000');

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(( message.args[1] * 50000 ) > message.user.balance) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.`);
	else if(( message.args[1] * 50000 ) <= message.user.balance)
	{
		message.user.balance -= ( message.args[1] * 50000 );
		message.user.rating += message.args[1];

		return bot(`–≤—ã –ø–æ–≤—ã—Å–∏–ª–∏ —Å–≤–æ–∏ –∫—É–±–∫–∏ –Ω–∞ ${message.args[1]}—à—Ç. –∑–∞ ${message.args[1] * 50000}$`);
	}
});
cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`—Å–ø–∏—Å–æ–∫ –±–∏–∑–Ω–µ—Å–æ–≤: 
${message.user.business === 1 ? 'üåØ' : 'üåØ'} 1. –®–∞—É—Ä–º–∏—á–Ω–∞—è +800$ | 150.000$
${message.user.business === 2 ? 'üç•' : 'üç•'} 2. –õ–∞—Ä—ë–∫ +2.000$ | 500.000$
${message.user.business === 3 ? 'üè¨' : 'üè¨'} 3. –ú–∞–≥–∞–∑–∏–Ω +5.000$ | 3–ö–ö$
${message.user.business === 4 ? 'üçπ' : 'üçπ'} 4. –†–µ—Å—Ç–æ—Ä–∞–Ω +10–ö$ | 9.3–ö–ö$
${message.user.business === 5 ? 'üè≠' : 'üè≠'} 5. –ó–∞–≤–æ–¥ +50–ö$ | 100–ö–ö$
${message.user.business === 6 ? 'üè¢' : 'üè¢'} 6. –û—Ñ–∏—Å +150–ö$ | 300–ö–ö$
${message.user.business === 7 ? 'üé¨' : 'üé¨'} 7. –ö–∏–Ω–æ—Å—Ç—É–¥–∏—è +500–ö$ | 1–ö–ö–ö$

üì¢–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ <<–ë–∏–∑–Ω–µ—Å—ã [–Ω–æ–º–µ—Ä]>>`);

	const sell = businesses.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.business) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –±–∏–∑–Ω–µ—Å. –û—Ç–ø—Ä–∞–≤—å—Ç–µ <<–ü—Ä–æ–¥–∞—Ç—å –±–∏–∑–Ω–µ—Å>>.`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.business.push({
			"id": message.args[1] + 1,
			"upgrade": 1,
			"workers": 1,
			"moneys": 0
	});
		if(message.user.business == 1) message.send(`${message.user.tag}, –≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`, {attachment: `photo559301136_457239896`})
		if(message.user.business == 2) message.send(`${message.user.tag}, –≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`, {attachment: `photo559301136_457239897`})
		if(message.user.business == 3) message.send(`${message.user.tag}, –≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`, {attachment: `photo559301136_457239898`})
		if(message.user.business == 4) message.send(`${message.user.tag}, –≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`, {attachment: `photo559301136_457239899`})
		if(message.user.business == 5) message.send(`${message.user.tag}, –≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`, {attachment: `photo559301136_457239900`})
		if(message.user.business == 6) message.send(`${message.user.tag}, –≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`, {attachment: `photo542439242_457246046`})
		if(message.user.business == 7) message.send(`${message.user.tag}, –≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ <<${sell.name}>> –∑–∞ ${utils.sp(sell.cost)}$`, {attachment: `photo559301136_457239901`})								
	}
});

cmd.hear(/^(?:—Ä–µ–π—Ç–∏–Ω–≥)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(( message.args[1] * 250000000 ) > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤`);
	else if(( message.args[1] * 250000000 ) <= message.user.balance)
	{
		message.user.balance -= ( message.args[1] * 250000000 );
		message.user.rating += message.args[1];

		return bot(`–≤—ã –ø–æ–≤—ã—Å–∏–ª–∏ —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ ${message.args[1]}üëë –∑–∞ ${message.args[1] * 250000000}$`);
	}
});

cmd.hear(/^(?:–∫—É—Ä—Å)$/i, async (message, bot) => {
	return bot(`–ë–∏—Ç–∫–æ–∏–Ω: ${utils.sp(btc)}$üè≠`);
});

cmd.hear(/^(?:–±–∏—Ç–∫–æ–∏–Ω)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(( message.args[1] * btc ) > message.user.balance) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!
üè≠–ö—É—Ä—Å –±–∏—Ç–∫–æ–∏–Ω–∞: ${btc}$`);
	else if(( message.args[1] * btc ) <= message.user.balance)
	{
		message.user.balance -= ( message.args[1] * btc );
		message.user.btc += message.args[1];

		return bot(`–≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ ${utils.sp(message.args[1])}‚Çø –∑–∞ ${utils.sp(message.args[1] * btc)}$`);
	}
});

cmd.hear(/^(?:—Ç–æ–ø)$/i, async (message, bot) => {
	let top = [];

	users.map(x=> {
		top.push({ balance: x.balance, rating: x.rating, tag: x.tag, id: x.id, mention: x.mention });
	});

	top.sort((a, b) => {
		return b.rating - a.rating;
	});

	let text = ``;
	const find = () => {
		let pos = 1000;

		for (let i = 0; i < top.length; i++)
		{
			if(top[i].id === message.senderId) return pos = i;
		}

		return pos;
	}

	for (let i = 0; i < 10; i++)
	{
		if(!top[i]) return;
		const user = top[i];

		text += `${i === 9 ? `&#128287;` : `${i + 1}&#8419;`} @id${user.id} (${user.tag}) ‚Äî üëë${utils.sp(user.rating)} | $${utils.rn(user.balance)}
		`;
	}

	return bot(`—Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤:
		${text}
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
${utils.gi(find() + 1)} ${message.user.tag} ‚Äî üèÜ${utils.sp(message.user.rating)} | $${utils.rn(message.user.balance)}`);
});


cmd.hear(/^(?:–¢–∞–∫—Å–æ–≤–∞—Ç—å)$/i, async (message, bot) => {
		if(message.user.golod < 10) return bot(`–≤—ã –ø—Ä–æ–≥–æ–ª–æ–¥–∞–ª—Å—è. –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ—Å—å –≤ <<–ú–∞–∫–¥–∞–∫>>!`);
	if(message.user.golod = 0) return bot(`–≤—ã –≥–æ–ª–æ–¥–Ω—ã–µ. –ó–∞–π–¥–∏—Ç–µ –≤ <<–ú–∞–∫–¥–∞–∫>>`);
	if(message.user.timers.taxi) return bot(`—Ç–∞–∫—Å–æ–≤–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–π —á–∞—Å‚ùó`);
	if(!message.user.transport.car) return bot(`—É –≤–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã.`);
	let prize = utils.pick([1]);

	setTimeout(() => {
		message.user.timers.taxi = false;
	}, 3600000);

	message.user.timers.taxi = true;

	if(prize === 1)
	{
		message.user.golod -= 10;
		message.user.balance += 33563;
		return bot(`—Ç–∞–∫—Å—É—è –ø–æ –ú–æ—Å–∫–≤–µ –≤—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ 33.563$üöñ`);
	}
	
	if(prize === 2)
	{
		message.user.golod -= 10;
		message.user.transport.car = 0;
		return bot(`–≤–∞—à–∞ –º–∞—à–∏–Ω–∞ –∑–∞–≥–ª–æ—Ö–ª–∞üéØ`);
	}
	
	if(prize === 3)
	{
		message.user.golod -= 10;
		message.user.balance += 26873;
		return bot(`—Ç–∞–∫—Å—É—è –ø–æ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—É –≤—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ 26.873$üöñ`);
	}
	
	if(prize === 4)
	{
		message.user.golod -= 10;
		message.user.transport.car = 0;
		return bot(`–≤–∞—à–∞ –º–∞—à–∏–Ω–∞ –ø–æ–ø–∞–ª–∞ –≤ –î–¢–üüéØ`);
	}
	
	if(prize === 5)
	{
		message.user.golod -= 10;
		message.user.transport.car = 0;
		return bot(`–≤–∞—à–∞ –º–∞—à–∏–Ω–∞ —Å–ª–æ–º–∞–ª–∞—Å—åüéØ`);
	}
	
	if(prize === 6)
	{
		message.user.golod -= 10;
		message.user.balance += 21755;
		return bot(`—Ç–∞–∫—Å—É—è –ø–æ –í–æ—Ä–æ–Ω–µ–∂—É –≤—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ 21.755$üöñ`);
	}
	
	if(prize === 7)
	{
		message.user.golod -= 10;
		message.user.transport.car = 0;
		return bot(`–≤–∞—à–∞ –º–∞—à–∏–Ω–∞ –ø–æ–ø–∞–ª–∞ –≤ –∞–≤–∞—Ä–∏—éüéØ`);
	}
	
});

cmd.hear(/^(?:–ö–æ–ø–∞—Ç—å)$/i, async (message, bot) => {
	if(message.user.golod < 10) return bot(`–≤—ã –ø—Ä–æ–≥–æ–ª–æ–¥–∞–ª–∏—Å—å! –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ—Å—å –≤ <<–ú–∞–∫–¥–∞–∫>>.`);
	let prize = utils.pick([1,2]);

	if(prize === 1)
	{
		const earn = utils.random(3, 14);
		const phrase = utils.pick([`ü•î`,`üåø`,`üåæ`]);
		message.user.ryuda += earn;
		message.user.exp += 1;
		bot(`—Ä–∞–±–æ—Ç–∞—è –Ω–∞ —Ñ–µ—Ä–º–µ –í—ã –ø–æ–ª—É—á–∏–ª–∏ ${utils.sp(earn)}–∫–≥${phrase}`)
	}
	if(prize === 2)
	{
		const sornyak = utils.random(5, 50);
		const phrase = utils.pick([`üå∑`,`üåº`,`üå±`]);
		message.user.ryuda += earn;
		message.user.exp += 1;
		bot(`–í–∞–º –ø–æ–ø–∞–ª—Å—è —Å–æ—Ä–Ω—è–∫. –ü–æ–ª—É—á–µ–Ω–æ +${utils.sp(earn)}$${phrase}`)
	}

});


cmd.hear(/^(?:–∞–Ω–µ–∫–¥–æ—Ç)$/i, async (message, bot) => {
		let filter = (text) => {
			text = text.replace('&quot;', '"');
			text = text.replace('!&quot;', '"');
			text = text.replace('?&quot;', '"');
			text = text.replace(/(&quot;)/ig, '"');
			return text;
		}

    let anek = await getAnek();
    return bot(`—Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n\n ${filter(anek)}`);

function getAnek() {
    return rq('https://www.anekdot.ru/random/anekdot/').then(body => {
        		let res = body.match(/(?:<div class="text">([^]+)<\/div>)/i);
        		res = res[0].split('</div>');
        		return res[0].split(`<div class="text">`).join('').split('<br>').join('\n');
        	});

	}
});

cmd.hear(/^(?:–°–Ω—è—Ç—å –≤–∏–¥–µ–æ|–°–Ω—è—Ç—å –±–ª–æ–≥|–°–Ω—è—Ç—å)$/i, async (message, bot) => {
		if(message.user.golod < 10) return bot(`–≤—ã –ø—Ä–æ–≥–æ–ª–æ–¥–∞–ª–∏—Å—å! –ó–∞–π–¥–∏—Ç–µ –≤ <<–ú–∞–∫–¥–∞–∫>>`);
	if(message.user.timers.film) return bot(`–±–ª–æ–≥ –¥–æ—Å—Ç—É–ø–µ–Ω —Ä–∞–∑ –≤ —á–∞—Å.`);
	if(!message.user.transport.cam) return bot(`—É –≤–∞—Å –Ω–µ—Ç –∫–∞–º–µ—Ä—ã, –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –µ–µ –≤ <<–ú–∞–≥–∞–∑–∏–Ω–µ>>.`);
	let prize = utils.pick([1, 2, 3, 4, 5]);

	setTimeout(() => {
		message.user.timers.film = false;
	}, 3600000);

	message.user.timers.film = true;

	if(prize === 1)
	{
		message.user.golod -= 10;
		message.user.balance += 5000;
		return bot(`–≤—ã –æ—Ç—Å–Ω—è–ª–∏ –≤–∏–¥–µ–æ –Ω–∞ —é—Ç—É–± –∏ –ø–æ–ª—É—á–∏–ª–∏ +5.000‚≠ê`);
	}
	
	if(prize === 2)
	{
		message.user.golod -= 10;
		message.user.balance += 10000;
		return bot(`–≤—ã –æ—Ç—Å–Ω—è–ª–∏ –≤–∏–¥–µ–æ –Ω–∞ —é—Ç—É–± –∏ –ø–æ–ª—É—á–∏–ª–∏ +10.000$`);
	}
	
	if(prize === 3)
	{
		message.user.golod -= 10;
		message.user.rating += 1;
		return bot(`–≤—ã –æ—Ç—Å–Ω—è–ª–∏ –≤–∏–¥–µ–æ –Ω–∞ —é—Ç—É–± –∏ –ø–æ–ª—É—á–∏–ª–∏ +1‚≠ê`);
	}
	
	if(prize === 4)
	{
		message.user.golod -= 10;
		message.user.rating += 2;
		return bot(`–≤—ã –æ—Ç—Å–Ω—è–ª–∏ –≤–∏–¥–µ–æ –Ω–∞ —é—Ç—É–± –∏ –ø–æ–ª—É—á–∏–ª–∏ +2‚≠ê`);
	}
	
	if(prize === 5)
	{
		message.user.golod -= 10;
		message.user.rating += 3;
		return bot(`–≤—ã –æ—Ç—Å–Ω—è–ª–∏ –≤–∏–¥–µ–æ –Ω–∞ —é—Ç—É–± –∏ –ø–æ–ª—É—á–∏–ª–∏ +3‚≠ê`);
	}
});


cmd.hear(/^(?:–ë–æ–Ω—É—Å|üîë–ë–æ–Ω—É—Å)$/i, async (message, bot) => {
	if(message.user.timers.bonus) return bot(`–±–æ–Ω—É—Å –¥–æ—Å—Ç—É–ø–µ–Ω —Ä–∞–∑ –≤ –¥–µ–Ω—å.`);
	let prize = utils.pick([1]);

	setTimeout(() => {
		message.user.timers.bonus = false;
	}, 86400000);

	message.user.timers.bonus = true;

	if(prize === 1)
	{
		const earn = utils.random(2500, 10000);
		message.user.balance += earn;
		bot(`–ø–æ–ª—É—á–µ–Ω–æ ${utils.sp(earn)}$`)
		message.sendSticker(`17087`)
	}
});


cmd.hear(/^(?:–±—Ä–∞–∫)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.marriage.partner) return bot(`–≤—ã —É–∂–µ –≤ –±—Ä–∞–∫–µ —Å –∏–≥—Ä–æ–∫–æ–º ${users[message.user.marriage.partner].tag}`);
	if(Number(message.args[1]) === message.user.uid) return bot(`–±—Ä–∞–∫ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.`);

	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	if(user.marriage.partner) return bot(`—ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±—Ä–∞–∫–µ.`);

	if(user.marriage.requests.find(x=> x == message.args[1])) return bot(`—ç—Ç–æ–º—É –∏–≥—Ä–æ–∫—É —É–∂–µ —Å–¥–µ–ª–∞–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.`);

	if(message.user.marriage.requests.find(x=> x == message.args[1]))
	{
		message.user.marriage.requests = [];
		message.user.marriage.partner = user.uid;

		user.marriage.requests = [];
		user.marriage.partner = message.user.uid;

		return bot(`–≤—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –±—Ä–∞–∫ —Å –∏–≥—Ä–æ–∫–æ–º <<${user.tag}>>`);
	}

	user.marriage.requests.push(message.user.uid);
	return bot(`–≤—ã —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É <<${user.tag}>>`);
});

cmd.hear(/^(?:–±—Ä–∞–∫–∏)$/i, async (message, bot) => {
	if(message.user.marriage.partner) return bot(`–≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –±—Ä–∞–∫–µ.`);
	return bot(`–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:
		${message.user.marriage.requests.map(x=> `–æ—Ç –∏–≥—Ä–æ–∫–∞: ${users[x].tag}[${x}]`).join('\n')}`);
});

cmd.hear(/^(?:—Ä–∞–∑–≤–æ–¥)$/i, async (message, bot) => {
	if(!message.user.marriage.partner) return bot(`–≤—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –±—Ä–∞–∫–µ!`);

	let user = users.find(x=> x.uid === message.user.marriage.partner);

	message.user.marriage.partner = 0;
	user.marriage.partner = 0;

	return bot(`–±—Ä–∞–∫ —Ä–∞—Å–ø–∞–ª—Å—è.`);
});

cmd.hear(/^(?:–¥–∞—Ç–∞)\s([0-9]+)$/i, async (message, bot) => {
	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	return bot(`–¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ${user.tag}: ${user.regDate}`);
});

cmd.hear(/^(?:—Ä–µ–ø–æ—Ä—Ç|—Ä–µ–ø|rep|–∂–∞–ª–æ–±–∞)\s([^]+)$/i, async (message, bot) => {
	vk.api.messages.send({ user_id: 542439242, forward_messages: message.id, message: `ID: ${message.user.uid} ${message.args[1]}` }).then(() => {
		return bot(`–∂–∞–ª–æ–±–∞/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.`)
		bot(`‚ú®–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –í–∞—à–∏–º –≤–æ–ø—Ä–æ—Å–æ–º.`);
	}).catch((err) => {
		return bot(`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω—è—è –æ—à–∏–±–∫–∞.`);
	});
});

cmd.hear(/^(?:–æ—Ç–≤–µ—Ç)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
	if(message.senderId !== 542439242) return;

	const user = await users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return;

	vk.api.messages.send({ user_id: user.id, message: `‚úâ–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:
	${message.args[2]}` });
});

cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞|—Ä–∞–±–æ—Ç—ã)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.work) return bot(`–≤–∞—à–∞ –Ω–æ–≤–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è - ${works[message.user.work - 1].name}
	${message.user.timers.hasWorked ? `—Ä–∞–±–æ—Ç–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç!` : ``}`);

	const work = works.find(x=> x.id === Number(message.args[1]));
	if(!work) return console.log(message.args[1]);

	if(work.requiredLevel > message.user.level) return bot(`–≤—ã –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º —ç—Ç–æ–π —Ä–∞–±–æ—Ç—ã.`);
	else if(work.requiredLevel <= message.user.level)
	if(message.args[1] == 1)
	{
		message.user.work = work.id;
		return bot(`–≤—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å <<${work.name}>> 
		üßπ–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <<–†–∞–±–æ—Ç–∞—Ç—å>>.`, {attachment: `photo559301136_457239914`});
	};
	if(message.args[1] == 2)
	{
		message.user.work = work.id;
		return bot(`–≤—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å <<${work.name}>> 
		üîß–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <<–†–∞–±–æ—Ç–∞—Ç—å>>.`, {attachment: `photo559301136_457239915`});
	};
	if(message.args[1] == 3)
	{
		message.user.work = work.id;
		return bot(`–≤—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å <<${work.name}>> 
		üß¨–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <<–†–∞–±–æ—Ç–∞—Ç—å>>.`, {attachment: `photo559301136_457239916`});
	};
	if(message.args[1] == 4)
	{
		message.user.work = work.id;
		return bot(`–≤—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å <<${work.name}>> 
		‚öô–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <<–†–∞–±–æ—Ç–∞—Ç—å>>.`, {attachment: `photo559301136_457239917`});
	};
	if(message.args[1] == 5)
	{
		message.user.work = work.id;
		return bot(`–≤—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å <<${work.name}>> 
		üìÑ–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <<–†–∞–±–æ—Ç–∞—Ç—å>>.`, {attachment: `photo559301136_457239918`});
	};
	if(message.args[1] == 6)
	{
		message.user.work = work.id;
		return bot(`–≤—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å <<${work.name}>> 
		üìù–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <<–†–∞–±–æ—Ç–∞—Ç—å>>.`, {attachment: `photo559301136_457239919`});
	};
	if(message.args[1] == 7)
	{
		message.user.work = work.id;
		return bot(`–≤—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å <<${work.name}>> 
		üçæ–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <<–†–∞–±–æ—Ç–∞—Ç—å>>.`, {attachment: `photo559301136_457239920`});
	}
	if(message.args[1] == 8)
	{
		message.user.work = work.id;
		return bot(`–≤—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å <<${work.name}>> 
		üë§–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <<–†–∞–±–æ—Ç–∞—Ç—å>>.`, {attachment: `photo559301136_457239921`});
	};
	if(message.args[1] == 9)
	{
		message.user.work = work.id;
		return bot(`–≤—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å <<${work.name}>> 
		üëì–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <<–†–∞–±–æ—Ç–∞—Ç—å>>.`, {attachment: `photo559301136_457239922`});
	}
});

cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞)$/i, async (message, bot) => {
	if(message.user.work) return bot(`–≤–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è - ${works[message.user.work - 1].name}
	${message.user.timers.hasWorked ? `—Ä–∞–±–æ—Ç–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç.` : ``}`);
	return bot(`–ø—Ä–æ—Ñ–µ—Å—Å–∏–∏: 

	üßπ 1. –î–≤–æ—Ä–Ω–∏–∫ 400-750$ | 1LVL 
	üîß 2. –°–∞–Ω—Ç–µ—Ö–Ω–∏–∫ 750-1.500$ | 3LVL
	üß¨ 3. –≠–ª–µ–∫—Ç—Ä–∏–∫ 1.500-3.000$ | 5LVL
	‚öô 4. –°–ª–µ—Å–∞—Ä—å 3.000-5.000$ | 8LVL
	üìÑ 5. –Æ—Ä–∏—Å—Ç 5.000-6.000$ | 10LVL
	üìù 6. –ë—É—Ö–≥–∞–ª—Ç–µ—Ä 6.000-9–ö$ | 14LVL
	üçæ 7. –ë–∞—Ä–º–µ–Ω 10.000-20.000$ | 22LVL
	üë§ 8. –ê–¥–º–∏–Ω 22.500-37.5–ö$ | 25LVL
	üëì 9. –ö–æ–¥–¥–µ—Ä 50–ö-100–ö | 49LVL

	üîî–î–ª—è —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ <<–†–∞–±–æ—Ç–∞ [–Ω–æ–º–µ—Ä]>>`);
});

cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞—Ç—å)$/i, async (message, bot) => {
		if(message.user.golod < 10) return bot(`–≤—ã –ø—Ä–æ–≥–æ–ª–æ–¥–∞–ª–∏—Å—å. –í–≤–µ–¥–∏—Ç–µ <<–ú–∞–∫–¥–∞–∫>>`);
	if(!message.user.work) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ä–∞–±–æ—Ç—ãüò©`);

	if(message.user.timers.hasWorked) return bot(`–≤—ã —Å–ª–∏—à–∫–æ–º —É—Å—Ç–∞–ª–∏, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 10 –º–∏–Ω—É—Ç.`);

	setTimeout(() => {
		message.user.timers.hasWorked = false;
	}, 600000);

	message.user.timers.hasWorked = true;

	const work = works.find(x=> x.id === message.user.work);
	const earn = utils.random(work.min, work.max);

	message.user.balance += earn;
	message.user.exp += 1;
	message.user.golod -= 10;

	bot(`—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –æ–∫–æ–Ω—á–µ–Ω.
	üí∞–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${utils.sp(earn)}$`)
	message.sendSticker(`17623`);
});

cmd.hear(/^(?:—É–≤–æ–ª–∏—Ç—å—Å—è)$/i, async (message, bot) => {
	if(!message.user.work) return bot(`–≤—ã –Ω–∏–≥–¥–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ.`);
	
	message.user.work = 0;
	return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ —É–≤–æ–≤–æ–ª–∏–ª–∏—Å—å —Å –ø—Ä–µ–∂–Ω–µ–π —Ä–∞–±–æ—Ç—ã.`);
});

cmd.hear(/^(?:–∫—É–±–∏–∫|–∫—É–±)\s([1-6])$/i, async (message, bot) => {
	const int = utils.pick([1, 2, 3, 4, 5, 6]);
	if(int == message.args[1])
	{
		message.user.balance += 2500;
		return bot(`–≤—ã–ø–∞–ª–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –ü—Ä–∏–∑: 2.500$`);
	} else return bot(`–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ ${int}üé≤`);
});

cmd.hear(/^(?:–∫–∞–∑–∏–Ω–æ|–∞–∑–∏–Ω–æ)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(message.args[1] <= 0) return;
	if(message.args[1] < 1000) return bot(`–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ 1.000$`);

const phrase = utils.pick(['üòî', 'üòâ',`ü§ë`,`üôÅ`,`üôÅ`]);
	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));;
	if(message.args[1] <= 0) return;

	if(message.args[1] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
	else if(message.args[1] <= message.user.balance)
	{
		message.user.balance -= message.args[1];
		const multiply = utils.pick([0.25, 0.75, 1, 0.5, 2, 2, 0.5, 0.50, 0.75, 0.75, 0.25, 1, 1, 1, 1, 0.5, 0.5, 1, 1, 1, 2, 2, 2, 2]);

		message.user.balance += Math.floor(message.args[1] * multiply);
		if(multiply < 1) message.send(`${message.user.tag}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$ ${phrase}`, {attachment: `photo559301136_457239873`});
		if(multiply > 1) message.send(`${message.user.tag}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$ ${phrase}`, {attachment: `photo559301136_457239872`})
		if(multiply === 1) message.send(`${message.user.tag}, –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–ø–∞–ª–æ. –ë–∞–ª–∞–Ω—Å –æ—Å—Ç–∞–ª—Å—è –ø—Ä–µ–∂–Ω–∏–º!`)
	}
});

cmd.hear(/^(?:—Ç—Ä–µ–π–¥)\s(–≤–≤–µ—Ä—Ö|–≤–Ω–∏–∑)\s(.*)$/i, async (message, bot) => {
	if(!message.user.transport.table) return bot(`—É –≤–∞—Å –Ω–µ—Ç –ø–ª–∞–Ω—à–µ—Ç–∞.`);
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;

	if(message.args[2] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!`);
	else if(message.args[2] <= message.user.balance)
	{
		message.user.balance -= message.args[2];

		const rand = utils.pick([0, 1]);
		const nav = Number(message.args[1].toLowerCase().replace(/–≤–≤–µ—Ä—Ö/, '1').replace(/–≤–Ω–∏–∑/, '2'));

		if(rand === nav)
		{
			const multiply = utils.pick([0.75, 0.80, 0.90, 0.95, 5.0, 1.25, 1.5, 1.75, 2, 2.5, 5]);
			message.user.balance += Math.floor(message.args[2] * multiply);

			return bot(`–∫—É—Ä—Å ${nav === 1 ? `–ø–æ–¥–æ—Ä–æ–∂–∞–ª‚§¥` : `–ø–æ–¥–µ—à–µ–≤–µ–ª‚§µ`} –Ω–∞ ${utils.random(100)}$
			‚úÖ–í—ã –ø–æ–ª—É—á–∏–ª–∏ +${message.args[2] * multiply}$
			üí¥–ë–∞–ª–∞–Ω—Å: ${message.user.balance}$`);
		} else {
			return bot(`–∫—É—Ä—Å ${nav === 2 ? `–ø–æ–¥–æ—Ä–æ–∂–∞–ª‚§¥` : `–ø–æ–¥–µ—à–µ–≤–µ–ª‚§µ`} –Ω–∞ ${utils.random(100)}$
			‚ùå–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${message.args[2]}$ 
			üí¥–ë–∞–ª–∞–Ω—Å: ${message.user.balance}`);
		}
	}
});

cmd.hear(/^(?:—Å—Ç–∞–∫–∞–Ω—á–∏–∫)\s([1-3])\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;

	if(message.args[2] > message.user.balance) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤‚ùó`);
	else if(message.args[2] <= message.user.balance)
	{
		message.user.balance -= message.args[2];

		const multiply = utils.pick([0.95, 0.90, 0.85, 0.80, 0.75, 0.70, 0.65]);
		const cup = utils.random(1, 3);

		if(cup == message.args[1])
		{
			message.user.balance += Math.floor(message.args[2] * multiply);
			return bot(`–≤—ã —É–≥–∞–¥–∞–ª–∏. –ü—Ä–∏–∑ ${message.args[2] * multiply}`);
		} else {
			return bot(`–≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–º –±—ã–ª ${cup} —Å—Ç–∞–∫–∞–Ω—á–∏–∫.`);
		}
	}
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å|üè¨–ë–∏–∑–Ω–µ—Å)\s(\d)$/i, async (message, bot) => {
	message.args[1] = Math.floor(Number(message.args[1]));
	if(message.args[1] < 1 || message.args[1] > 2) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ¬´–ë–∏–∑–Ω–µ—Å 1/2¬ª`);
	if(message.user.business.length < message.args[1]) return bot(`–±–∏–∑–Ω–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω`);
	message.args[1]--;
	const biz = businesses[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade - 1];

	return bot(`—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ <<${biz.name}>>:
	üì¶–ü—Ä–∏–±—ã–ª—å: ${utils.sp(Math.floor(biz.earn / biz.workers * message.user.business[message.args[1]].workers))}$/—á–∞—Å
	üë∑‚Äç–†–∞–±–æ—á–∏—Ö: ${message.user.business[message.args[1]].workers}/${biz.workers}
	üí∞–ù–∞ —Å—á—ë—Ç–µ: ${utils.sp(message.user.business[message.args[1]].moneys)}$

	${ (businesses[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade] != null ? "‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ —É–ª—É—á—à–µ–Ω–∏–µ! (" + utils.sp(businesses[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade].cost) + "$)" : "") }`);
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å)\s(?:—Å–Ω—è—Ç—å)\s(.*)\s(.*)$/i, async (message, bot) => {
	message.args[1] = Math.floor(Number(message.args[1]));
	if(message.args[1] < 1 || message.args[1] > 2) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ¬´–ë–∏–∑–Ω–µ—Å —Å–Ω—è—Ç—å 1/2 —Å—É–º–º–∞¬ª`);
	if(message.user.business.length < message.args[1]) return bot(`—É –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	message.args[1]--;
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.business[message.args[1]].moneys);
	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));
	if(message.args[2] <= 0) return bot(`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞`);
	if(message.args[2] > message.user.business[message.args[1]].moneys) return bot(`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤`);

	message.user.balance += message.args[2];
	message.user.business[message.args[1]].moneys -= message.args[2];

	return bot(`–≤—ã —Å–Ω—è–ª–∏ —Å–æ —Å—á—ë—Ç–∞ —Å–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ ${utils.sp(message.args[2])}$`);
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å)\s(?:—É–ª—É—á—à–∏—Ç—å)\s(.*)$/i, async (message, bot) => {
	message.args[1] = Math.floor(Number(message.args[1]));
	if(message.args[1] < 1 || message.args[1] > 2) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ¬´–ë–∏–∑–Ω–µ—Å —É–ª—É—á—à–∏—Ç—å 1/2¬ª`);
	if(message.user.business.length < message.args[1]) return bot(`–±–∏–∑–Ω–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω`);
	message.args[1]--;
	if(businesses[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade] == null) return bot(`—É–ª—É—á—à–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã`);
	const cost = businesses[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade].cost;
	if(cost > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è`);
	message.user.balance -= cost;
	message.user.business[message.args[1]].upgrade++;

	return bot(`–≤—ã —É–ª—É—á—à–∏–ª–∏ –±–∏–∑–Ω–µ—Å ¬´${message.args[1] + 1}¬ª –∑–∞ ${utils.sp(cost)}$`);
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å)\s(?:–Ω–∞–Ω—è—Ç—å)\s(.*)\s(.*)$/i, async (message, bot) => {
	message.args[1] = Math.floor(Number(message.args[1]));
	message.args[2] = Math.floor(Number(message.args[2]));
	if(message.args[1] < 1 || message.args[1] > 2) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ¬´–ë–∏–∑–Ω–µ—Å –Ω–∞–Ω—è—Ç—å 1/2 —á–∏—Å–ª–æ¬ª`);
	if(message.user.business.length < message.args[1]) return bot(`–±–∏–∑–Ω–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω`);
	message.args[1]--;
	if(message.user.business[message.args[1]].workers + message.args[2] > businesses[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade - 1].workers) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç`);
	const cost = message.args[2] * 0;
	if(cost > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤`);
	message.user.balance -= cost;
	message.user.business[message.args[1]].workers += message.args[2];

	return bot(`–≤—ã –Ω–∞–Ω—è–ª–∏ ${message.args[2]} —Ä–∞–±–æ—á–∏—Ö –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ ¬´${message.args[1] + 1}¬ª`);
});

cmd.hear(/^(?:—Ñ–µ—Ä–º–∞|üîã–§–µ—Ä–º–∞)$/i, async (message, bot) => {
	if(!message.user.misc.farm) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ñ–µ—Ä–º—ã`);
	if(!message.user.farm_btc) return bot(`—Ñ–µ—Ä–º–∞ –ø—É—Å—Ç–∞—è`);

	const btc_ = message.user.farm_btc * message.user.misc.farm_count;
	let prize = utils.pick([1,2,3]);

	if(prize === 1)
	{
		const btc_ = message.user.farm_btc;
		message.user.btc += message.user.farm_btc;
		message.user.farm_btc = 0
		bot(`–≤—ã —Å–æ–±—Ä–∞–ª–∏ ${utils.sp(btc_)}‚Çø –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
		üîã–ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}—à—Ç.`,{attachment: `photo559301136_457239877`});
	}
	if(prize === 2)
	{
		const btc_ = message.user.farm_btc;
		message.user.btc += message.user.farm_btc;
		message.user.farm_btc = 0
		bot(`–≤—ã —Å–æ–±—Ä–∞–ª–∏ ${utils.sp(btc_)}‚Çø –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
		üîã–ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}—à—Ç.`,{attachment: `photo559301136_457239879`});
	}
	if(prize === 3)
	{
		const btc_ = message.user.farm_btc;
		message.user.btc += message.user.farm_btc;
		message.user.farm_btc = 0
		bot(`–≤—ã —Å–æ–±—Ä–∞–ª–∏ ${utils.sp(btc_)}‚Çø –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
		üîã–ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}—à—Ç.`,{attachment: `photo559301136_457239880`});
	}
});

cmd.hear(/^(?:restart)$/i, async (message, bot) => {
	if(message.senderId !== 542439242) return;
	await bot(`–±–æ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è`);

	await saveUsers();
	process.exit(-1);
});

cmd.hear(/^(?:—Ä–µ—Ñ|—Ä–µ—Ñ–µ—Ä–∞–ª)$/i, async (message, bot) => {
	return bot(`–ø—Ä–∏—à–ª–æ: ${users.filter(x=> x.referal === message.user.uid).length} –¥—Ä—É–∑–µ–π
	–ß—Ç–æ–±—ã –≤–∞–º –∑–∞—Å—á–∏—Ç–∞–ª–∏ –¥—Ä—É–≥–∞ –æ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É <<–†–µ—Ñ ${message.user.uid}>>üëÄ
	
	üë´–ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –±–æ–Ω—É—Å 15.000$, –∞ –¥—Ä—É–≥—É - 30.000$`);
});

cmd.hear(/^(?:—Ä–µ—Ñ|—Ä–µ—Ñ–µ—Ä–∞–ª)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.referal !== null) return bot(`–≤—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É!`);
	let user = users.find(x=> x.uid === Number(message.args[1]));

	if(!users) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
	if(user.id === message.senderId) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	user.balance += 25000;
	message.user.balance += 50000;

	message.user.referal = Number(message.args[1]);

	vk.api.messages.send({ user_id: user.id, message: `—Å–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞üéâ
	üí≤–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 25.000$ –Ω–∞ –±–∞–ª–∞–Ω—Å` });
	return bot(`–≤—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É.
	üíµ–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 50.000$`);
});

cmd.hear(/^(?:–≥–∏—Ñ)\s(.*)$/i, async (message, bot) => {
       bot(`–≥–∏—Ñ–∫–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É ${message.args[1]}:`)
       	vk.api.call('docs.search', {q: message.args[1] + '.gif', count: 10})
        .then(response => {
            let items = response.items.map(x => `doc${x.owner_id}_${x.id}`).join(',');
            let item = utils.pick(response.items);
            message.send({attachment: items})
        })
});

cmd.hear(/^(?:—Å–µ–π—Ñ)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.timers.safe) return bot(`–≤–∑–ª–∞–º—ã–≤–∞—Ç—å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ —á–∞—Å.`);
	let prize = utils.pick([1]);

	setTimeout(() => {
		message.user.timers.safe = false;
	}, 3600000);

	message.user.timers.safe = true;
	
	if(message.args[1] < 10 || message.args[1] >= 100) return;

	const int = utils.random(10, 99);
	message.args[1] = Number(message.args[1]);

	if(int === message.args[1])
	{
		message.user.balance += 5.000;
		return bot(`–ø—Ä–∞–≤–∏–ª—å–Ω–æ!
		üí∞–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 5.000$`);
	} else if(int !== message.args[1])
	{
		return bot(`–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. (${int})`);
	}
});